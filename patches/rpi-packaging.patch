diff -Naur a/scripts/package/builddeb b/scripts/package/builddeb
--- a/scripts/package/builddeb	2022-08-31 00:19:27.448245349 -0400
+++ b/scripts/package/builddeb	2022-08-31 00:38:45.164224617 -0400
@@ -82,6 +82,14 @@
 else
 	cp System.map "$tmpdir/boot/System.map-$version"
 	cp $KCONFIG_CONFIG "$tmpdir/boot/config-$version"
+	if [ -e arch/arm/boot/zImage ]; then
+		cp arch/arm/boot/zImage "$tmpdir/boot/kernel.img";
+	fi
+	install -m 0644 firmware/bootcode.bin "$tmpdir/boot"
+	install -m 0644 firmware/fixup*.dat "$tmpdir/boot"
+	install -m 0644 firmware/start*.elf "$tmpdir/boot"
+	cp firmware/LICENCE.broadcom "$tmpdir/boot"
+	cp firmware/COPYING.linux "$tmpdir/boot"
 fi
 cp "$($MAKE -s -f $srctree/Makefile image_name)" "$tmpdir/$installed_image_path"
 
@@ -129,6 +137,28 @@
 	mv $libc_headers_dir/usr/include/asm $libc_headers_dir/usr/include/$host_arch/
 fi
 
+# install dtb and overlays
+if [ -e $tmpdir/boot ]; then :; else mkdir -p "$tmpdir/boot"; fi
+if [ -e $tmpdir/usr/lib/raspberrypi-linux-image/bcm2708-rpi-zero-w.dtb ]; then
+	cp -r "$tmpdir/usr/lib/raspberrypi-linux-image/bcm2708-rpi-zero-w.dtb" "$tmpdir/boot/bcm2708-rpi-zero-w.dtb";
+fi
+if [ -e $tmpdir/usr/lib/raspberrypi-linux-image/bcm2708-rpi-zero.dtb ]; then
+	cp -r "$tmpdir/usr/lib/raspberrypi-linux-image/bcm2708-rpi-zero.dtb" "$tmpdir/boot/bcm2708-rpi-zero.dtb";
+fi
+if [ -e $tmpdir/usr/lib/raspberrypi-linux-image/bcm2708-rpi-b.dtb ]; then
+	cp -r "$tmpdir/usr/lib/raspberrypi-linux-image/bcm2708-rpi-b.dtb" "$tmpdir/boot/bcm2708-rpi-b.dtb";
+fi
+if [ -e $tmpdir/usr/lib/raspberrypi-linux-image/bcm2708-rpi-b-plus.dtb ]; then
+	cp -r "$tmpdir/usr/lib/raspberrypi-linux-image/bcm2708-rpi-b-plus.dtb" "$tmpdir/boot/bcm2708-rpi-b-plus.dtb";
+fi
+if [ -e $tmpdir/usr/lib/raspberrypi-linux-image/bcm2708-rpi-b-rev1.dtb ]; then
+	cp -r "$tmpdir/usr/lib/raspberrypi-linux-image/bcm2708-rpi-b-rev1.dtb" "$tmpdir/boot/bcm2708-rpi-b-rev1.dtb";
+fi
+if [ -e $tmpdir/usr/lib/raspberrypi-linux-image/overlays ]; then
+	mkdir -p "$tmpdir/boot/overlays";
+	cp -r "$tmpdir/usr/lib/raspberrypi-linux-image/overlays/" "$tmpdir/boot/";
+fi
+
 # Install the maintainer scripts
 # Note: hook scripts under /etc/kernel are also executed by official Debian
 # kernel packages, as well as kernel packages built using make-kpkg.
@@ -154,6 +184,19 @@
 	chmod 755 "$tmpdir/DEBIAN/$script"
 done
 
+cat <<EOF > "$tmpdir/DEBIAN/preinst"
+#!/bin/bash
+
+set -e
+
+if [ -e /boot/kernel.img ]; then
+	rm -fdr /boot/{kernel*,initrd.img*,System.map-*,config-*,vmlinuz-*,*.dtb,bootcode.bin,fixup*.dat,start*.elf,LICENCE.broadcom,COPYING.linux,overlays};
+fi
+
+exit 0
+EOF
+chmod 755 "$tmpdir/DEBIAN/preinst"
+
 # Build kernel header package
 (cd $srctree; find . -name Makefile\* -o -name Kconfig\* -o -name \*.pl) > "$objtree/debian/hdrsrcfiles"
 (cd $srctree; find arch/*/include include scripts -type f -o -type l) >> "$objtree/debian/hdrsrcfiles"
@@ -174,6 +217,56 @@
 ln -sf "/usr/src/linux-headers-$version" "$kernel_headers_dir/lib/modules/$version/build"
 rm -f "$objtree/debian/hdrsrcfiles" "$objtree/debian/hdrobjfiles"
 
+# Clean and compile headers
+if [ -f headers-byteshift.patch ]; then
+	cp headers-byteshift.patch $destdir/
+	cp $srctree/scripts/module.lds $destdir/
+	mkdir -p $kernel_headers_dir/DEBIAN
+	cat <<EOF > "$kernel_headers_dir/DEBIAN/postinst"
+#!/bin/bash
+
+set -e
+
+clean_headers(){
+find -type f -exec touch {} +
+echo 'y' | make ARCH=arm M=scripts clean
+if [ -f headers-byteshift.patch ]; then
+	patch -p1 < headers-byteshift.patch;
+fi
+if [ -f scripts/module.lds ]; then
+	:;
+else
+	install -m 0644 module.lds scripts/;
+fi
+rm -f {headers-byteshift.patch,module.lds}
+echo 'y' | make ARCH=arm -j\$(grep -c 'processor' /proc/cpuinfo) -s scripts
+echo 'y' | make ARCH=arm -j\$(grep -c 'processor' /proc/cpuinfo) -s M=scripts/mod/
+if [ -f .config.old ]; then
+	rm -f .config.old;
+fi
+}
+
+cd /usr/src/linux-headers-$version
+echo -e "Compiling headers ..."
+clean_headers > /dev/null 2>&1
+
+exit 0
+EOF
+	chmod 755 "$kernel_headers_dir/DEBIAN/postinst"
+fi
+
+mkdir -p $kernel_headers_dir/DEBIAN
+cat <<EOF > "$kernel_headers_dir/DEBIAN/preinst"
+#!/bin/bash
+
+set -e
+
+rm -fdr /usr/src/linux-headers-*
+
+exit 0
+EOF
+chmod 755 "$kernel_headers_dir/DEBIAN/preinst"
+
 if [ "$ARCH" != "um" ]; then
 	create_package "$kernel_headers_packagename" "$kernel_headers_dir"
 	create_package "$libc_headers_packagename" "$libc_headers_dir"
