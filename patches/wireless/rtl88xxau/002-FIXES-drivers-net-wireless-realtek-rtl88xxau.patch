From 21b664c73cbfb797eae801bad95acd9bbb8bdfbb Mon Sep 17 00:00:00 2001
From: Patrick Yavitz <pyavitz@xxxxx.com>
Date: Sat, 18 Nov 2023 06:06:05 -0500
Subject: [PATCH] FIXES: drivers: net: wireless: realtek: rtl88xxau

RTL8812AU/21AU and RTL8814AU Wireless drivers

Signed-off-by: Patrick Yavitz <pyavitz@xxxxx.com>
---
 .../net/wireless/realtek/rtl88xxau/Makefile   |  2 +
 .../realtek/rtl88xxau/core/rtw_mlme_ext.c     |  6 ++
 .../rtl88xxau/include/drv_types_linux.h       |  3 +-
 .../rtl88xxau/os_dep/linux/ioctl_cfg80211.c   | 60 ++++++++++++++++---
 .../rtl88xxau/os_dep/linux/ioctl_cfg80211.h   |  7 +++
 .../realtek/rtl88xxau/os_dep/linux/usb_intf.c |  4 ++
 .../rtl88xxau/os_dep/linux/wifi_regd.c        | 12 ++++
 7 files changed, 86 insertions(+), 8 deletions(-)

diff --git a/drivers/net/wireless/realtek/rtl88xxau/Makefile b/drivers/net/wireless/realtek/rtl88xxau/Makefile
index 3da820aa9b31..e046a9891c43 100755
--- a/drivers/net/wireless/realtek/rtl88xxau/Makefile
+++ b/drivers/net/wireless/realtek/rtl88xxau/Makefile
@@ -9,6 +9,8 @@ EXTRA_CFLAGS += -Wno-implicit-fallthrough
 EXTRA_CFLAGS += -Wno-cast-function-type
 #EXTRA_CFLAGS += -Wno-error=cast-function-type
 #EXTRA_CFLAGS += -Wno-parentheses-equality
+EXTRA_CFLAGS += -Wno-error=incompatible-pointer-types
+EXTRA_CFLAGS += -Wno-stringop-overread
 #EXTRA_CFLAGS += -Wno-pointer-bool-conversion
 EXTRA_CFLAGS += -Wno-unknown-pragmas
 #EXTRA_CFLAGS += -Wno-unused
diff --git a/drivers/net/wireless/realtek/rtl88xxau/core/rtw_mlme_ext.c b/drivers/net/wireless/realtek/rtl88xxau/core/rtw_mlme_ext.c
index 57e7536c00e7..527e06dd51e8 100644
--- a/drivers/net/wireless/realtek/rtl88xxau/core/rtw_mlme_ext.c
+++ b/drivers/net/wireless/realtek/rtl88xxau/core/rtw_mlme_ext.c
@@ -1971,6 +1971,12 @@ unsigned int OnBeacon(_adapter *padapter, union recv_frame *precv_frame)
 #if 0 /* move to validate_recv_mgnt_frame */
 				psta->sta_stats.rx_mgnt_pkts++;
 #endif
+
+#if defined(CONFIG_IOCTL_CFG80211)
+				rtw_cfg80211_cqm_rssi_update(
+					padapter,
+					pmlmepriv->cur_network_scanned->network.Rssi);
+#endif
 			}
 
 		} else if ((pmlmeinfo->state & 0x03) == WIFI_FW_ADHOC_STATE) {
diff --git a/drivers/net/wireless/realtek/rtl88xxau/include/drv_types_linux.h b/drivers/net/wireless/realtek/rtl88xxau/include/drv_types_linux.h
index 6264a4d30f5c..56435c85545d 100644
--- a/drivers/net/wireless/realtek/rtl88xxau/include/drv_types_linux.h
+++ b/drivers/net/wireless/realtek/rtl88xxau/include/drv_types_linux.h
@@ -17,10 +17,11 @@
 
 #if (LINUX_VERSION_CODE < KERNEL_VERSION(5, 15, 0))
 /* Porting from linux kernel v5.15 48eab831ae8b9f7002a533fa4235eed63ea1f1a3 3f6cffb8604b537e3d7ea040d7f4368689638eaf*/
-static inline void eth_hw_addr_set(struct net_device *dev, const u8 *addr)
+static inline void rtw_eth_hw_addr_set(struct net_device *dev, const u8 *addr)
 {
     memcpy(dev->dev_addr, addr, ETH_ALEN);
 }
+#define eth_hw_addr_set rtw_eth_hw_addr_set
 #endif
 
 #endif
diff --git a/drivers/net/wireless/realtek/rtl88xxau/os_dep/linux/ioctl_cfg80211.c b/drivers/net/wireless/realtek/rtl88xxau/os_dep/linux/ioctl_cfg80211.c
index 32689e8e975a..45b724ef9a58 100644
--- a/drivers/net/wireless/realtek/rtl88xxau/os_dep/linux/ioctl_cfg80211.c
+++ b/drivers/net/wireless/realtek/rtl88xxau/os_dep/linux/ioctl_cfg80211.c
@@ -473,7 +473,7 @@ u8 rtw_cfg80211_ch_switch_notify(_adapter *adapter, u8 ch, u8 bw, u8 offset,
 
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 3, 0))
 	cfg80211_ch_switch_notify(adapter->pnetdev, &chdef, 0, 0);
-#elif (LINUX_VERSION_CODE >= KERNEL_VERSION(5,19, 2))
+#elif (LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 2))
 	cfg80211_ch_switch_notify(adapter->pnetdev, &chdef, 0);
 #else
 	cfg80211_ch_switch_notify(adapter->pnetdev, &chdef);
@@ -4471,6 +4471,47 @@ static int cfg80211_rtw_flush_pmksa(struct wiphy *wiphy,
 	return 0;
 }
 
+static int cfg80211_rtw_set_cqm_rssi_config(struct wiphy *wiphy,
+					    struct net_device *ndev,
+					    s32 rssi_thold, u32 rssi_hyst)
+{
+	_adapter *padapter = (_adapter *)rtw_netdev_priv(ndev);
+	struct rtw_wdev_priv *priv = adapter_wdev_data(padapter);
+
+	priv->cqm_rssi_thold = rssi_thold;
+	priv->cqm_rssi_hyst = rssi_hyst;
+	priv->cqm_rssi_last = 0;
+
+	return 0;
+}
+
+void rtw_cfg80211_cqm_rssi_update(_adapter *padapter, s32 rssi)
+{
+	struct rtw_wdev_priv *priv = adapter_wdev_data(padapter);
+	enum nl80211_cqm_rssi_threshold_event event;
+
+	if (priv->cqm_rssi_thold == 0)
+		return;
+
+	if (rssi < priv->cqm_rssi_thold &&
+	    (priv->cqm_rssi_last == 0 ||
+	     rssi < priv->cqm_rssi_last - priv->cqm_rssi_hyst))
+                event = NL80211_CQM_RSSI_THRESHOLD_EVENT_LOW;
+        else if (rssi > priv->cqm_rssi_thold &&
+		 (priv->cqm_rssi_last == 0 ||
+		  rssi > priv->cqm_rssi_last + priv->cqm_rssi_hyst))
+                event = NL80211_CQM_RSSI_THRESHOLD_EVENT_HIGH;
+        else
+                return;
+
+        priv->cqm_rssi_last = rssi;
+        cfg80211_cqm_rssi_notify(padapter->pnetdev, event,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4,11,0)
+				 rssi,
+#endif
+				 GFP_ATOMIC);
+}
+
 #ifdef CONFIG_AP_MODE
 void rtw_cfg80211_indicate_sta_assoc(_adapter *padapter, u8 *pmgmt_frame, uint frame_len)
 {
@@ -5262,10 +5303,10 @@ static int cfg80211_rtw_change_beacon(struct wiphy *wiphy, struct net_device *nd
 	return ret;
 }
 
-#if (LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 2))
-static int cfg80211_rtw_stop_ap(struct wiphy *wiphy, struct net_device *ndev, unsigned int link_id)
-#else
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(5, 19, 2))
 static int cfg80211_rtw_stop_ap(struct wiphy *wiphy, struct net_device *ndev)
+#else
+static int cfg80211_rtw_stop_ap(struct wiphy *wiphy, struct net_device *ndev, unsigned int link_id)
 #endif
 {
 	_adapter *adapter = (_adapter *)rtw_netdev_priv(ndev);
@@ -7697,6 +7738,9 @@ static int cfg80211_rtw_tdls_mgmt(struct wiphy *wiphy,
 	const u8 *peer,
 #else
 	u8 *peer,
+#endif
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 5, 0))
+	int link_id,
 #endif
 	u8 action_code,
 	u8 dialog_token,
@@ -10038,13 +10082,14 @@ static struct cfg80211_ops rtw_cfg80211_ops = {
 	.set_pmksa = cfg80211_rtw_set_pmksa,
 	.del_pmksa = cfg80211_rtw_del_pmksa,
 	.flush_pmksa = cfg80211_rtw_flush_pmksa,
+	.set_cqm_rssi_config = cfg80211_rtw_set_cqm_rssi_config,
 
-#ifdef CONFIG_AP_MODE
 #ifdef RTW_VIRTUAL_INT
 	.add_virtual_intf = cfg80211_rtw_add_virtual_intf,
 	.del_virtual_intf = cfg80211_rtw_del_virtual_intf,
 #endif
 
+#ifdef CONFIG_AP_MODE
 #if (LINUX_VERSION_CODE < KERNEL_VERSION(3, 4, 0)) && !defined(COMPAT_KERNEL_RELEASE)
 	.add_beacon = cfg80211_rtw_add_beacon,
 	.set_beacon = cfg80211_rtw_set_beacon,
@@ -10315,7 +10360,7 @@ void rtw_wdev_unregister(struct wireless_dev *wdev)
 	rtw_cfg80211_indicate_scan_done(adapter, _TRUE);
 
 	#if (LINUX_VERSION_CODE >= KERNEL_VERSION(3, 11, 0)) || defined(COMPAT_KERNEL_RELEASE)
-	#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0))
+	#if (LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 2))
 	if (wdev->links[0].client.current_bss) {
 	#elif (LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 2))
 	if (wdev->connected) {
@@ -10356,9 +10401,10 @@ int rtw_cfg80211_ndev_res_alloc(_adapter *adapter)
 		rtw_wiphy_free(wiphy);
 		adapter->wiphy = NULL;
 	}
-#endif
 
 exit:
+#endif
+
 	return ret;
 }
 
diff --git a/drivers/net/wireless/realtek/rtl88xxau/os_dep/linux/ioctl_cfg80211.h b/drivers/net/wireless/realtek/rtl88xxau/os_dep/linux/ioctl_cfg80211.h
index e7dd8050e97a..d40a36e64fbc 100644
--- a/drivers/net/wireless/realtek/rtl88xxau/os_dep/linux/ioctl_cfg80211.h
+++ b/drivers/net/wireless/realtek/rtl88xxau/os_dep/linux/ioctl_cfg80211.h
@@ -185,6 +185,11 @@ struct rtw_wdev_priv {
 	u16 pno_scan_seq_num;
 #endif
 
+	/* Standard RSSI notification parameters */
+	s32 cqm_rssi_thold;
+	u32 cqm_rssi_hyst;
+	s32 cqm_rssi_last;
+
 #ifdef CONFIG_RTW_CFGVEDNOR_RSSIMONITOR
         s8 rssi_monitor_max;
         s8 rssi_monitor_min;
@@ -351,6 +356,8 @@ void rtw_cfg80211_init_rfkill(struct wiphy *wiphy);
 void rtw_cfg80211_deinit_rfkill(struct wiphy *wiphy);
 #endif
 
+void rtw_cfg80211_cqm_rssi_update(_adapter *padapter, s32 rssi);
+
 #if (LINUX_VERSION_CODE < KERNEL_VERSION(3, 4, 0))  && !defined(COMPAT_KERNEL_RELEASE)
 #define rtw_cfg80211_rx_mgmt(wdev, freq, sig_dbm, buf, len, gfp) cfg80211_rx_mgmt(wdev_to_ndev(wdev), freq, buf, len, gfp)
 #elif (LINUX_VERSION_CODE < KERNEL_VERSION(3, 6, 0))
diff --git a/drivers/net/wireless/realtek/rtl88xxau/os_dep/linux/usb_intf.c b/drivers/net/wireless/realtek/rtl88xxau/os_dep/linux/usb_intf.c
index b319e58c5609..be0f654f0928 100644
--- a/drivers/net/wireless/realtek/rtl88xxau/os_dep/linux/usb_intf.c
+++ b/drivers/net/wireless/realtek/rtl88xxau/os_dep/linux/usb_intf.c
@@ -1640,6 +1640,10 @@ static void __exit rtw_drv_halt(void)
 	rtw_mstat_dump(RTW_DBGDUMP);
 }
 
+#ifdef MODULE_IMPORT_NS
+MODULE_IMPORT_NS(VFS_internal_I_am_really_a_filesystem_and_am_NOT_a_driver);
+#endif
+
 module_init(rtw_drv_entry);
 module_exit(rtw_drv_halt);
 
diff --git a/drivers/net/wireless/realtek/rtl88xxau/os_dep/linux/wifi_regd.c b/drivers/net/wireless/realtek/rtl88xxau/os_dep/linux/wifi_regd.c
index 5f2f9050667b..45c5bd1a9404 100644
--- a/drivers/net/wireless/realtek/rtl88xxau/os_dep/linux/wifi_regd.c
+++ b/drivers/net/wireless/realtek/rtl88xxau/os_dep/linux/wifi_regd.c
@@ -396,6 +396,18 @@ static void _rtw_regd_init_wiphy(struct rtw_regulatory *reg, struct wiphy *wiphy
 	wiphy->regulatory_flags &= ~REGULATORY_DISABLE_BEACON_HINTS;
 #endif
 
+/*
+ * Ubuntu backported a specific upstream change to kernel 6.2 while others skipped 6.2 altogether.
+ * If build fails on kernel 6.2.x and you're not using Ubuntu,
+ * try changing the version "(6, 3, 0)" below to "(6, 2, 0)".
+ */
+
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(3, 19, 0)) && (LINUX_VERSION_CODE < KERNEL_VERSION(6, 1, 39)) \
+	|| (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 3, 0)) && (LINUX_VERSION_CODE < KERNEL_VERSION(6, 3, 13)) \
+	|| (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 4, 0)) && (LINUX_VERSION_CODE < KERNEL_VERSION(6, 4, 4))
+	wiphy->regulatory_flags |= REGULATORY_IGNORE_STALE_KICKOFF;
+#endif
+
 	regd = _rtw_regdomain_select(reg);
 	wiphy_apply_custom_regulatory(wiphy, regd);
 
-- 
2.39.2

