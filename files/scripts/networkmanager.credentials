#!/bin/bash
if [ -f /boot/credentials.txt ]; then
	source /boot/credentials.txt;
fi

# Functions
dhcp(){
if [ -f /etc/default/crda ]; then
	sed -i "s/REGDOMAIN=/REGDOMAIN=${COUNTRYCODE}/g" /etc/default/crda;
fi
iw reg set ${COUNTRYCODE}
nmcli c add type wifi con-name ${SSID} ifname wlan0 ssid ${SSID}
nmcli c modify ${SSID} wifi-sec.key-mgmt wpa-psk wifi-sec.psk ${PASSKEY}
nmcli c up ${SSID}
}

static(){
if [ -f /etc/default/crda ]; then
	sed -i "s/REGDOMAIN=/REGDOMAIN=${COUNTRYCODE}/g" /etc/default/crda;
fi
iw reg set ${COUNTRYCODE}
nmcli c add type wifi con-name ${SSID} ifname wlan0 ssid ${SSID}
nmcli c modify ${SSID} wifi-sec.key-mgmt wpa-psk wifi-sec.psk ${PASSKEY}
nmcli con mod ${SSID} ipv4.addresses ${IPADDR}/24
nmcli con mod ${SSID} ipv4.gateway ${GATEWAY}
nmcli con mod ${SSID} ipv4.method manual
nmcli con mod ${SSID} ipv4.dns "${DNS}"
nmcli c up ${SSID}
}

connect_wifi(){
if [[ "$MANUAL" == "y" ]]; then
	static;
else
	dhcp;
fi
}

# Renew ssh keys and machine-id
sleep 1s
rm -f /etc/ssh/ssh_host_*
dpkg-reconfigure openssh-server
service ssh restart
rm -f /etc/machine-id
rm -f /var/lib/dbus/machine-id
dbus-uuidgen --ensure=/etc/machine-id
dbus-uuidgen --ensure

# Check Credentials
if [ -f /boot/credentials.txt ]; then
	connect_wifi;
else
	:;
fi

# Clean
if [ -f /etc/init.d/credentials ]; then
	update-rc.d -f credentials remove;
fi
if [ -f /etc/systemd/system/credentials.service ]; then
	systemctl disable credentials;
fi
rm -f /boot/{credentials.txt,rename_to_credentials.txt}
rm -f /usr/local/bin/credentials
exit 0
