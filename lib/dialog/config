#!/bin/bash

BUILDER="5.5"
GCC=`ls -ls /usr/bin/gcc | sed 's/.*\(..\)/\1/' | sed 's/ //g'`
ARCH=`uname -m`

NAME=""
USERNAME=""
PASSWORD=""
LOCALE="en_US.UTF-8"
TIMEZONE="America/New_York"
USER_NAMESERVER1="8.8.8.8"
USER_NAMESERVER2="8.8.4.4"
if [[ -f "profile.txt" ]]; then
	# source user profile
	. profile.txt
fi
ROOTPASSWD="0"
VERSION="6.1.y"
BUILD_VERSION="1"
MENUCONFIG="0"
GCC_VERSION="gcc-$GCC"
GCC="1"
CCACHE="0"
CLANG="0"
DISTRO="debian"
DISTRO_VERSION="bookworm"
NETWORKMANAGER="1"
CUSTOM_DEFCONFIG="0"
MYCONFIG=""
VERBOSE="0"
DEVROOTFS="1"
COMPRESS_IMG="0"
USCRIPTS="0"
USERACCT="0"

# open fd
exec 3>&1

# store data to $VALUES variable
VALUES=$(dialog --ok-label "Submit" --no-cancel \
	--backtitle "RASPBERRY PI IMAGE BUILDER: CONFIG MENU" \
	--title "" --form "" 0 36 0 \
	"Name:"			1 1	"$NAME" 		1 7 23 0 \
	"Username:"		2 1	"$USERNAME" 		2 11 19 0 \
	"Password:"		3 1	"$PASSWORD"  		3 11 19 0 \
	"Enable root:"		4 1	"$ROOTPASSWD"  		4 14 2 0 \
	""			5 1	""	 		5 14 0 0 \
	"Linux kernel"		6 1	""	 		6 14 0 0 \
        "Branch:"   		7 1     "$VERSION"        	7 9 7 0 \
        "Build:"   		8 1     "$BUILD_VERSION"        8 8 4 0 \
	"Menuconfig:"		9 1	"$MENUCONFIG"  		9 13 2 0 \
	""			10 1	""	 		10 14 0 0 \
	"Compiler"		11 1	""	 		11 14 0 0 \
	"Version:"		12 1	"$GCC_VERSION"	 	12 10 8 0 \
	"GCC:"			13 1	"$GCC"		 	13 9 2 0 \
	"Ccache:"		14 1	"$CCACHE"	 	14 9 2 0 \
	"Clang:"		15 1	"$CLANG"	 	15 9 2 0 \
	""			16 1	""	 		16 14 0 0 \
	"Distribution"		17 1	""	 		17 14 0 0 \
	"Distro:"		18 1	"$DISTRO"	  	18 9 21 0 \
	"Release:"		19 1	"$DISTRO_VERSION"  	19 10 20 0 \
	"Network Manager:" 	20 1	"$NETWORKMANAGER" 	20 18 2 0 \
	""			21 1	""	 		21 14 0 0 \
	"Customize"		22 1	""	 		22 14 0 0 \
	"Defconfig:"		23 1	"$CUSTOM_DEFCONFIG" 	23 12 2 0 \
	"Name:"			24 1	"$MYCONFIG"	  	24 7 23 0 \
	""			25 1	""	 		25 14 0 0 \
	"User options"		26 1	""	 		26 14 0 0 \
	"Verbosity:"		27 1	"$VERBOSE"		27 12 2 0 \
	"Devel Rootfs:"		28 1	"$DEVROOTFS"		28 15 2 0 \
	"Compress img:"		29 1	"$COMPRESS_IMG" 	29 15 2 0 \
	"User scripts:"		30 1	"$USCRIPTS"		30 15 2 0 \
	"User service:" 	31 1	"$USERACCT"		31 15 2 0 \
2>&1 1>&3)

# close fd
exec 3>&-

# convert into variables
echo "$VALUES" > tmp1
echo NAME='"' > tmp0
echo USERNAME='"' >> tmp0
echo PASSWORD='"' >> tmp0
echo ROOTPASSWD= >> tmp0
echo VERSION='"' >> tmp0
echo BUILD_VERSION='"' >> tmp0
echo MENUCONFIG= >> tmp0
echo GCC_VERSION='"' >> tmp0
echo GCC= >> tmp0
echo CCACHE= >> tmp0
echo CLANG= >> tmp0
echo DISTRO='"' >> tmp0
echo DISTRO_VERSION='"' >> tmp0
echo NETWORKMANAGER= >> tmp0
echo CUSTOM_DEFCONFIG= >> tmp0
echo MYCONFIG='"' >> tmp0
echo VERBOSE= >> tmp0
echo DEVROOTFS= >> tmp0
echo COMPRESS_IMG= >> tmp0
echo USCRIPTS= >> tmp0
echo USERACCT= >> tmp0
echo 'USER_PKGS="htop libsensors-dev"' >> tmp0
echo 'ENABLE_COMMIT="0"' >> tmp0
echo 'COMMIT=""' >> tmp0
echo 'CLANG_VERSION="clang-15"' >> tmp0
echo 'CLANG_LLVM="LLVM=-15 LLVM_IAS=1"' >> tmp0
echo LTO_CLANG_THIN=0 >> tmp0
echo CORES=\`nproc\` >> tmp0
echo 'CFLAGS=""' >> tmp0
echo 'KBUSER="$USER"' >> tmp0
echo 'KBHOST="raspberrypi"' >> tmp0
echo "set_locales(){" >> tmp0
echo "apt install -y locales" >> tmp0
echo "export LANGUAGE=${LOCALE}" >> tmp0
echo "export LANG=${LOCALE}" >> tmp0
echo "export LC_ALL=C.UTF-8" >> tmp0
echo "locale-gen ${LOCALE}" >> tmp0
echo "}" >> tmp0
echo "set_timezone(){" >> tmp0
echo "ln -snf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime" >> tmp0
echo "echo -n '${TIMEZONE}' > /etc/timezone" >> tmp0
echo "}" >> tmp0
echo NAMESERVER1='"'${USER_NAMESERVER1}'"' >> tmp0
echo NAMESERVER2='"'${USER_NAMESERVER2}'"' >> tmp0
echo RTL88XXAU=0 >> tmp0
echo RTL88X2BU=0 >> tmp0
echo RTL88XXCU=0 >> tmp0
echo builder=${BUILDER} >> tmp0
echo '"' > tmp2
echo '"' >> tmp2
echo '"' >> tmp2
echo >> tmp2
echo '"' >> tmp2
echo '"' >> tmp2
echo >> tmp2
echo '"' >> tmp2
echo >> tmp2
echo >> tmp2
echo >> tmp2
echo '"' >> tmp2
echo '"' >> tmp2
echo >> tmp2
echo >> tmp2
echo _defconfig'"' >> tmp2
paste -d '\0' tmp0 tmp1 tmp2  > userdata.txt
rm -f tmp0 tmp1 tmp2

# categories
sed -i '5i### LINUX KERNEL' userdata.txt
sed -i '10i### COMPILER' userdata.txt
sed -i '14i### DISTRIBUTION' userdata.txt
sed -i '18i### CUSTOM' userdata.txt
sed -i '27i### CUSTOM LINUX KERNEL' userdata.txt
sed -i '30i### CLANG/LLVM' userdata.txt
sed -i '34i### COMPILER TUNING' userdata.txt
sed -i '37i### WHOAMI AND HOST' userdata.txt
sed -i '40i### LOCALES' userdata.txt
sed -i '47i### TIMEZONE' userdata.txt
sed -i '53i### NAME SERVER' userdata.txt
sed -i '56i### EXTRA WIRELESS' userdata.txt
sed -i '60i### DO NOT EDIT BELOW THIS LINE' userdata.txt

# customize your image
custom_txt (){
echo "# Default Image Size: 3072MB" > custom.txt
echo 'IMGSIZE="3072MB"' >> custom.txt
echo "" >> custom.txt
echo "# Root Filesystem Types: ext4 btrfs xfs" >> custom.txt
echo 'FSTYPE="ext4"' >> custom.txt
echo "" >> custom.txt
echo "# Hostname" >> custom.txt
echo 'HOSTNAME="raspberrypi"' >> custom.txt
echo "" >> custom.txt
echo "# Branding: true false" >> custom.txt
echo 'BRANDING="false"' >> custom.txt
echo 'MOTD="Raspberry Pi"' >> custom.txt
echo "" >> custom.txt
echo "### DO NOT EDIT BELOW THIS LINE" >> custom.txt
echo "# CUSTOM=${BUILDER}" >> custom.txt
}

if [[ -f "custom.txt" ]]; then
	if [[ `grep -w "CUSTOM=${BUILDER}" "custom.txt"` ]]; then
		:;
	else
		custom_txt
	fi
else
	custom_txt
fi

# clear screen
clear -x

# userdata-txt
if [[ -f "userdata.txt" ]]; then
	sed -i 's/=0/="0"/g' userdata.txt
	sed -i 's/=1/="1"/g' userdata.txt
	sed -i 's/LLVM_IAS="1"/LLVM_IAS=1/g' userdata.txt
	echo -e "userdata file created."
	exit 0
fi

exit 0
