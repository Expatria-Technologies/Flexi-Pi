### STAGE 1
partitions(){
case `grep -Fx 'DISTRO_VERSION="testing"' "userdata.txt" >/dev/null; echo $?` in
  0)
    truncate -s ${DEVUANIMGSIZE_TESTING} "${IMAGE_FOLDER}${IMAGE_FILE_NAME}"
    ;;
  1)
    truncate -s ${DEVUANIMGSIZE} "${IMAGE_FOLDER}${IMAGE_FILE_NAME}"
    ;;
esac
fdisk "${IMAGE_FOLDER}${IMAGE_FILE_NAME}" <<EOF
o
n
p
1
2048
524287
a
c
t
b
n
p
2
524288

p
w

EOF
IMAGE_LOOP_DEV="$(losetup --show -f ${IMAGE_FOLDER}${IMAGE_FILE_NAME})"
IMAGE_LOOP_DEV_BOOT="${IMAGE_LOOP_DEV}p1"
IMAGE_LOOP_DEV_ROOTFS="${IMAGE_LOOP_DEV}p2"
partprobe "${IMAGE_LOOP_DEV}"
mkfs.vfat -n BOOT "${IMAGE_LOOP_DEV_BOOT}"
mkfs.ext4 -L ROOTFS "${IMAGE_LOOP_DEV_ROOTFS}"
mkdir -p p1 p2
mount "${IMAGE_LOOP_DEV_BOOT}" p1
mount "${IMAGE_LOOP_DEV_ROOTFS}" p2
sync
umount p2
mount -o defaults,noatime "${IMAGE_LOOP_DEV_ROOTFS}" p2
}

partition_uuid(){
BOOT_UUID=$(blkid -o export -- "${IMAGE_LOOP_DEV_BOOT}" | sed -ne 's/^UUID=//p')
ROOT_UUID=$(blkid -o export -- "${IMAGE_LOOP_DEV_ROOTFS}" | sed -ne 's/^UUID=//p')
ROOT_PARTUUID=$(blkid -o export -- "${IMAGE_LOOP_DEV_ROOTFS}" | sed -ne 's/^PARTUUID=//p')

echo BOOT_UUID='"'$BOOT_UUID'"' > part-uuid.txt
echo ROOT_UUID='"'$ROOT_UUID'"' >> part-uuid.txt
echo ROOT_PARTUUID='"'$ROOT_PARTUUID'"' >> part-uuid.txt

source part-uuid.txt
}

cmdline(){
tee p1/cmdline.txt <<EOF
console=serial0,115200 console=tty1 root=PARTUUID=${ROOT_PARTUUID} rootfstype=ext4 elevator=deadline fsck.repair=yes logo.nologo rootwait
EOF
}

bcm2711_config(){
tee p1/config.txt <<EOF
arm_64bit=1
kernel=kernel8.img

# For more options and information see
# http://rpf.io/configtxt
# Some settings may impact device functionality. See link above for details

# uncomment if you get no picture on HDMI for a default "safe" mode
#hdmi_safe=1

# uncomment this if your display has a black border of unused pixels visible
# and your display can output without overscan
disable_overscan=1

# uncomment the following to adjust overscan. Use positive numbers if console
# goes off screen, and negative if there is too much border
#overscan_left=16
#overscan_right=16
#overscan_top=16
#overscan_bottom=16

# uncomment to force a console size. By default it will be display's size minus
# overscan.
#framebuffer_width=1280
#framebuffer_height=720

### uncomment to set display to 1024x768
#overscan_left=0
#overscan_right=0
#overscan_top=0
#overscan_bottom=0

#framebuffer_width=1024
#framebuffer_height=768
#framebuffer_depth=16

#hdmi_group=2
#hdmi_mode=16

# uncomment if hdmi display is not detected and composite is being output
#hdmi_force_hotplug=1

# uncomment to force a specific HDMI mode (this will force VGA)
#hdmi_group=1
#hdmi_mode=1

# uncomment to force a HDMI mode rather than DVI. This can make audio work in
# DMT (computer monitor) modes
#hdmi_drive=2

# uncomment to increase signal to HDMI, if you have interference, blanking, or
# no display
#config_hdmi_boost=4

# uncomment for composite PAL
#sdtv_mode=2

# camera
#start_x=1
gpu_mem=128

# uncomment to overclock the arm. 700 MHz is the default.
#arm_freq=800

# uncomment some or all of these to enable the optional hardware interfaces
#dtparam=i2c_arm=on
#dtparam=i2s=on
#dtparam=spi=on

# uncomment this to enable infrared communication.
#dtoverlay=gpio-ir,gpio_pin=17
#dtoverlay=gpio-ir-tx,gpio_pin=18

# additional overlays and parameters are documented /boot/overlays/README

# enable audio (loads snd_bcm2835)
dtparam=audio=on

# enable uart
enable_uart=0

# Disable wifi and bluetooth
#dtoverlay=disable-wifi
#dtoverlay=disable-bt

# Remove test rainbow
disable_splash=1

[pi4]
# enable DRM VC4 V3D driver on top of the dispmanx display stack
dtoverlay=vc4-fkms-v3d
max_framebuffers=2
EOF
}

bcm2710_config(){
tee p1/config.txt <<EOF
arm_64bit=1
kernel=kernel8.img

# For more options and information see
# http://rpf.io/configtxt
# Some settings may impact device functionality. See link above for details

# uncomment if you get no picture on HDMI for a default "safe" mode
#hdmi_safe=1

# uncomment this if your display has a black border of unused pixels visible
# and your display can output without overscan
disable_overscan=1

# uncomment the following to adjust overscan. Use positive numbers if console
# goes off screen, and negative if there is too much border
#overscan_left=16
#overscan_right=16
#overscan_top=16
#overscan_bottom=16

# uncomment to force a console size. By default it will be display's size minus
# overscan.
#framebuffer_width=1280
#framebuffer_height=720

### uncomment to set display to 1024x768
#overscan_left=0
#overscan_right=0
#overscan_top=0
#overscan_bottom=0

#framebuffer_width=1024
#framebuffer_height=768
#framebuffer_depth=16

#hdmi_group=2
#hdmi_mode=16

# uncomment if hdmi display is not detected and composite is being output
#hdmi_force_hotplug=1

# uncomment to force a specific HDMI mode (this will force VGA)
#hdmi_group=1
#hdmi_mode=1

# uncomment to force a HDMI mode rather than DVI. This can make audio work in
# DMT (computer monitor) modes
#hdmi_drive=2

# uncomment to increase signal to HDMI, if you have interference, blanking, or
# no display
#config_hdmi_boost=4

# uncomment for composite PAL
#sdtv_mode=2

# camera
#start_x=1
gpu_mem=128

# uncomment to overclock the arm. 700 MHz is the default.
#arm_freq=800

# uncomment some or all of these to enable the optional hardware interfaces
#dtparam=i2c_arm=on
#dtparam=i2s=on
#dtparam=spi=on

# uncomment this to enable infrared communication.
#dtoverlay=gpio-ir,gpio_pin=17
#dtoverlay=gpio-ir-tx,gpio_pin=18

# additional overlays and parameters are documented /boot/overlays/README

# enable audio (loads snd_bcm2835)
dtparam=audio=on

# enable uart
enable_uart=0

# Disable wifi and bluetooth
#dtoverlay=pi3-disable-wifi
#dtoverlay=pi3-disable-bt

# Remove test rainbow
disable_splash=1
EOF
}

bcm2708_config(){
tee p1/config.txt <<EOF
kernel=kernel.img

# For more options and information see
# http://rpf.io/configtxt
# Some settings may impact device functionality. See link above for details

# uncomment if you get no picture on HDMI for a default "safe" mode
#hdmi_safe=1

# uncomment this if your display has a black border of unused pixels visible
# and your display can output without overscan
disable_overscan=1

# uncomment the following to adjust overscan. Use positive numbers if console
# goes off screen, and negative if there is too much border
#overscan_left=16
#overscan_right=16
#overscan_top=16
#overscan_bottom=16

# uncomment to force a console size. By default it will be display's size minus
# overscan.
#framebuffer_width=1280
#framebuffer_height=720

### uncomment to set display to 1024x768
#overscan_left=0
#overscan_right=0
#overscan_top=0
#overscan_bottom=0

#framebuffer_width=1024
#framebuffer_height=768
#framebuffer_depth=16

#hdmi_group=2
#hdmi_mode=16

# uncomment if hdmi display is not detected and composite is being output
#hdmi_force_hotplug=1

# uncomment to force a specific HDMI mode (this will force VGA)
#hdmi_group=1
#hdmi_mode=1

# uncomment to force a HDMI mode rather than DVI. This can make audio work in
# DMT (computer monitor) modes
#hdmi_drive=2

# uncomment to increase signal to HDMI, if you have interference, blanking, or
# no display
#config_hdmi_boost=4

# uncomment for composite PAL
#sdtv_mode=2

# camera
#start_x=1
gpu_mem=128

# uncomment to overclock the arm. 700 MHz is the default.
#arm_freq=800

# uncomment some or all of these to enable the optional hardware interfaces
#dtparam=i2c_arm=on
#dtparam=i2s=on
#dtparam=spi=on

# uncomment this to enable infrared communication.
#dtoverlay=gpio-ir,gpio_pin=17
#dtoverlay=gpio-ir-tx,gpio_pin=18

# additional overlays and parameters are documented /boot/overlays/README

# enable audio (loads snd_bcm2835)
dtparam=audio=on

# enable uart
enable_uart=0

# Disable wifi and bluetooth
#dtoverlay=disable-wifi
#dtoverlay=disable-bt

# Remove test rainbow
disable_splash=1
EOF
}

rpi4_bootbins(){
mkdir -p firmware/boot
echo
wget -cq -P firmware/boot https://github.com/raspberrypi/firmware/raw/master/boot/fixup4.dat
if ls firmware/boot/fixup4.dat > /dev/null 2>&1
	then echo -n "fixup4.dat " && echo_nok;
	else echo -n "fixup4.dat " && echo_fail;
fi
echo
wget -cq -P firmware/boot https://github.com/raspberrypi/firmware/raw/master/boot/fixup4cd.dat
if ls firmware/boot/fixup4cd.dat > /dev/null 2>&1
	then echo -n "fixup4cd.dat " && echo_nok;
	else echo -n "fixup4cd.dat " && echo_fail;
fi
echo
wget -cq -P firmware/boot https://github.com/raspberrypi/firmware/raw/master/boot/fixup4db.dat
if ls firmware/boot/fixup4db.dat > /dev/null 2>&1
	then echo -n "fixup4db.dat " && echo_nok;
	else echo -n "fixup4db.dat " && echo_fail;
fi
echo
wget -cq -P firmware/boot https://github.com/raspberrypi/firmware/raw/master/boot/fixup4x.dat
if ls firmware/boot/fixup4x.dat > /dev/null 2>&1
	then echo -n "fixup4x.dat " && echo_nok;
	else echo -n "fixup4x.dat " && echo_fail;
fi
echo
wget -cq -P firmware/boot https://github.com/raspberrypi/firmware/raw/master/boot/start4.elf
if ls firmware/boot/start4.elf > /dev/null 2>&1
	then echo -n "start4.elf " && echo_nok;
	else echo -n "start4.elf " && echo_fail;
fi
echo
wget -cq -P firmware/boot https://github.com/raspberrypi/firmware/raw/master/boot/start4cd.elf
if ls firmware/boot/start4cd.elf > /dev/null 2>&1
	then echo -n "start4cd.elf " && echo_nok;
	else echo -n "start4cd.elf " && echo_fail;
fi
echo
wget -cq -P firmware/boot https://github.com/raspberrypi/firmware/raw/master/boot/start4db.elf
if ls firmware/boot/start4db.elf > /dev/null 2>&1
	then echo -n "start4db.elf " && echo_nok;
	else echo -n "start4db.elf " && echo_fail;
fi
echo
wget -cq -P firmware/boot https://github.com/raspberrypi/firmware/raw/master/boot/start4x.elf
if ls firmware/boot/start4x.elf > /dev/null 2>&1
	then echo -n "start4x.elf " && echo_nok;
	else echo -n "start4x.elf " && echo_fail;
fi
echo
wget -cq -P firmware/boot https://github.com/raspberrypi/firmware/raw/master/boot/LICENCE.broadcom
wget -cq -P firmware/boot https://github.com/raspberrypi/firmware/raw/master/boot/COPYING.linux

install -v -m 0644 firmware/boot/fixup4*.dat p1/ > /dev/null 2>&1
install -v -m 0644 firmware/boot/start4*.elf p1/ > /dev/null 2>&1
install -v -m 0644 firmware/boot/LICENCE.broadcom p1/ > /dev/null 2>&1
install -v -m 0644 firmware/boot/COPYING.linux p1/ > /dev/null 2>&1
if ls p1/{fixup4.dat,fixup4cd.dat,fixup4db.dat,fixup4x.dat,start4.elf,start4cd.elf,start4db.elf,start4x.elf} > /dev/null 2>&1
	then echo -n "install " && echo_bdone;
	else echo -n "install " && echo_fail && exit;
fi
}

rpi_bootbins(){
mkdir -p firmware/boot
echo
wget -cq -P firmware/boot https://github.com/raspberrypi/firmware/raw/master/boot/bootcode.bin
if ls firmware/boot/bootcode.bin > /dev/null 2>&1
	then echo -n "bootcode.bin " && echo_nok;
	else echo -n "bootcode.bin " && echo_fail;
fi
echo
wget -cq -P firmware/boot https://github.com/raspberrypi/firmware/raw/master/boot/fixup.dat
if ls firmware/boot/fixup.dat > /dev/null 2>&1
	then echo -n "fixup.dat " && echo_nok;
	else echo -n "fixup.dat " && echo_fail;
fi
echo
wget -cq -P firmware/boot https://github.com/raspberrypi/firmware/raw/master/boot/fixup_cd.dat
if ls firmware/boot/fixup_cd.dat > /dev/null 2>&1
	then echo -n "fixup_cd.dat " && echo_nok;
	else echo -n "fixup_cd.dat " && echo_fail;
fi
echo
wget -cq -P firmware/boot https://github.com/raspberrypi/firmware/raw/master/boot/fixup_db.dat
if ls firmware/boot/fixup_db.dat > /dev/null 2>&1
	then echo -n "fixup_db.dat " && echo_nok;
	else echo -n "fixup_db.dat " && echo_fail;
fi
echo
wget -cq -P firmware/boot https://github.com/raspberrypi/firmware/raw/master/boot/fixup_x.dat
if ls firmware/boot/fixup_x.dat > /dev/null 2>&1
	then echo -n "fixup_x.dat " && echo_nok;
	else echo -n "fixup_x.dat " && echo_fail;
fi
echo
wget -cq -P firmware/boot https://github.com/raspberrypi/firmware/raw/master/boot/start.elf
if ls firmware/boot/start.elf > /dev/null 2>&1
	then echo -n "start.elf " && echo_nok;
	else echo -n "start.elf " && echo_fail;
fi
echo
wget -cq -P firmware/boot https://github.com/raspberrypi/firmware/raw/master/boot/start_cd.elf
if ls firmware/boot/start_cd.elf > /dev/null 2>&1
	then echo -n "start_cd.elf " && echo_nok;
	else echo -n "start_cd.elf " && echo_fail;
fi
echo
wget -cq -P firmware/boot https://github.com/raspberrypi/firmware/raw/master/boot/start_db.elf
if ls firmware/boot/start_db.elf > /dev/null 2>&1
	then echo -n "start_db.elf " && echo_nok;
	else echo -n "start_db.elf " && echo_fail;
fi
echo
wget -cq -P firmware/boot https://github.com/raspberrypi/firmware/raw/master/boot/start_x.elf
if ls firmware/boot/start_x.elf > /dev/null 2>&1
	then echo -n "start_x.elf " && echo_nok;
	else echo -n "start_x.elf " && echo_fail;
fi
echo
wget -cq -P firmware/boot https://github.com/raspberrypi/firmware/raw/master/boot/LICENCE.broadcom
wget -cq -P firmware/boot https://github.com/raspberrypi/firmware/raw/master/boot/COPYING.linux

install -v -m 0644 firmware/boot/bootcode.bin p1/ > /dev/null 2>&1
install -v -m 0644 firmware/boot/fixup*.dat p1/ > /dev/null 2>&1
install -v -m 0644 firmware/boot/start*.elf p1/ > /dev/null 2>&1
install -v -m 0644 firmware/boot/LICENCE.broadcom p1/ > /dev/null 2>&1
install -v -m 0644 firmware/boot/COPYING.linux p1/ > /dev/null 2>&1
if ls p1/{bootcode.bin,fixup.dat,fixup_cd.dat,fixup_db.dat,fixup_x.dat,start.elf,start_cd.elf,start_db.elf,start_x.elf} > /dev/null 2>&1
	then echo -n "install " && echo_bdone;
	else echo -n "install " && echo_fail && exit;
fi
}

aarch64_extract(){
tar -xf devuan-${DISTRO_VERSION}-rootfs-aarch64.tar.xz -C p2/
}

armel_extract(){
tar -xf devuan-${DISTRO_VERSION}-rootfs-armel.tar.xz -C p2/
}

aarch64_rootfs(){
if ls devuan-${DISTRO_VERSION}-rootfs-aarch64.tar.xz > /dev/null 2>&1
	then echo -n "Extracting rootfs " && aarch64_extract && echo_bdone;
	else echo -e "${YLW}Missing rootfs tarball${FIN}!" && exit;
fi
echo
}

armel_rootfs(){
if ls devuan-${DISTRO_VERSION}-rootfs-armel.tar.xz > /dev/null 2>&1
	then echo -n "Extracting rootfs " && armel_extract && echo_bdone;
	else echo -e "${YLW}Missing rootfs tarball${FIN}!" && exit;
fi
echo
}

rpi-firmware(){
aria2c -c --download-result=hide --console-log-level=error \
--disable-ipv6=true --summary-interval=0 --show-files=false \
https://github.com/RPi-Distro/firmware-nonfree/archive/master.tar.gz
mv -f firmware-nonfree-master.tar.gz firmware/
}

### STAGE 2
# USER CONFIG
bcm2708_user(){
echo -n 'bcm2708' > /etc/hostname
sed -i '1 a 127.0.1.1	bcm2708' /etc/hosts
adduser ${user} --gecos "bcm2708" --disabled-password
}

bcm2710_user(){
echo -n 'bcm2710' > /etc/hostname
sed -i '1 a 127.0.1.1	bcm2710' /etc/hosts
adduser ${user} --gecos "bcm2710" --disabled-password
}

bcm2711_user(){
echo -n 'bcm2711' > /etc/hostname
sed -i '1 a 127.0.1.1	bcm2711' /etc/hosts
adduser ${user} --gecos "bcm2711" --disabled-password
}

user_config(){
if `grep -Fx "bcm2711" "/root/soc.txt" >/dev/null;`
	then bcm2711_user
fi
if `grep -Fx "bcm2710" "/root/soc.txt" >/dev/null;`
	then bcm2710_user
fi
if `grep -Fx "bcm2708" "/root/soc.txt" >/dev/null;`
	then bcm2708_user
fi

echo "${user}:${passwd}" | chpasswd
adduser ${user} sudo
adduser ${user} audio
adduser ${user} dialout
adduser ${user} video
adduser ${user} disk
groupadd spi
groupadd i2c
groupadd gpio
adduser ${user} spi
adduser ${user} i2c
adduser ${user} gpio
adduser ${user} plugdev
adduser ${user} netdev
adduser ${user} bluetooth
adduser ${user} input
adduser ${user} tty
if `grep -Fx 'DISTRO_VERSION="beowulf"' "/root/userdata.txt" >/dev/null;`
	then addgroup --gid 125 kvm
fi

echo
echo Adding mc skins.
sleep 1s
mkdir -p /usr/share/mc/skins
mv -f darkgreen.ini /usr/share/mc/skins/darkgreen.ini
mv -f darkred.ini /usr/share/mc/skins/darkred.ini
echo Done.
echo
echo Adding mc ini and nanorc
sleep 1s
mkdir -p /root/.config/mc
mv -f root-ini /root/.config/mc/ini
mv -f nanorc-root /root/.nanorc
mkdir -p /home/${user}/.config/mc
mv -f user-ini /home/${user}/.config/mc/ini
mv -f nanorc-user /home/${user}/.nanorc
chown -R root:root /root
chown -R ${user}:${user} /home/${user}
echo Done.

echo
echo Creating sudoers file.
sleep 1s
rm -f /etc/sudoers.d/010_pi-nopasswd
tee /etc/sudoers.d/010_${user}-nopasswd <<EOF
${user} ALL=(ALL) NOPASSWD: ALL
EOF
echo Done.

rm -f username.txt
rm -f whogoesthere
chown -R ${user}:${user} /home/${user}
}

# ADMIN CONFIG
bcm2708_admin(){
echo -n 'bcm2708' > /etc/hostname
sed -i '1 a 127.0.1.1	bcm2708' /etc/hosts
}

bcm2710_admin(){
echo -n 'bcm2710' > /etc/hostname
sed -i '1 a 127.0.1.1	bcm2710' /etc/hosts
}

bcm2711_admin(){
echo -n 'bcm2711' > /etc/hostname
sed -i '1 a 127.0.1.1	bcm2711' /etc/hosts
}

admin_config(){
if `grep -Fx "bcm2711" "/root/soc.txt" >/dev/null;`
	then bcm2711_admin
fi
if `grep -Fx "bcm2710" "/root/soc.txt" >/dev/null;`
	then bcm2710_admin
fi
if `grep -Fx "bcm2708" "/root/soc.txt" >/dev/null;`
	then bcm2708_admin
fi

groupadd spi
groupadd i2c
groupadd gpio
if `grep -Fx 'DISTRO_VERSION="beowulf"' "/root/userdata.txt" >/dev/null;`
	then addgroup --gid 125 kvm
fi

echo
echo Adding mc skins.
sleep 1s
mkdir -p /usr/share/mc/skins
mv -f darkgreen.ini /usr/share/mc/skins/darkgreen.ini
mv -f darkred.ini /usr/share/mc/skins/darkred.ini
echo Done.
echo
echo Adding mc ini and nanorc
sleep 1s
mkdir -p /root/.config/mc
mv -f root-ini /root/.config/mc/ini
mv -f nanorc-root /root/.nanorc
mv -f user-ini /etc/opt/user-ini
mv -f nanorc-user /etc/opt/nanorc-user
chown -R root:root /root
echo Done.

mv -f username.txt /boot/
mv -f whogoesthere /usr/local/bin/
chmod +x /usr/local/bin/whogoesthere
chown -R root:root /usr/local/bin/whogoesthere
}

user_eeprom(){
echo
echo Adding user eeprom config.
tee /home/${user}/.eeprom <<EOF
# EEPROM CONFIG
## https://archive.raspberrypi.org/debian/pool/main/r/rpi-eeprom/
EEPROM_VERSION="${EEPROM_VERSION}"
EOF
chown ${user}:${user} /home/${user}/.eeprom
}

admin_eeprom(){
echo
echo Adding user eeprom config.
tee /etc/opt/eeprom <<EOF
# EEPROM CONFIG
## https://archive.raspberrypi.org/debian/pool/main/r/rpi-eeprom/
EEPROM_VERSION="${EEPROM_VERSION}"
EOF
chown root:root /etc/opt/eeprom
}

eeprom_choose(){
case `grep -Fx "admin=1" "/root/userdata.txt" >/dev/null; echo $?` in
  0)
	admin_eeprom
    ;;
  1)
	user_eeprom
    ;;
esac
}

bcm_sdio_zero-w(){
wget -cq --show-progress https://raw.githubusercontent.com/openwrt/cypress-nvram/master/brcmfmac43430-sdio.raspberrypi%2Cmodel-zero-w.txt
}

bcm_sdio_3-b-plus(){
wget -cq --show-progress https://raw.githubusercontent.com/openwrt/cypress-nvram/master/brcmfmac43455-sdio.raspberrypi%2C3-model-b-plus.txt
wget -cq --show-progress https://raw.githubusercontent.com/RPi-Distro/firmware-nonfree/master/brcm/brcmfmac43430-sdio.raspberrypi-rpi.txt
}

bcm_sdio_4-b(){
wget -cq --show-progress https://raw.githubusercontent.com/openwrt/cypress-nvram/master/brcmfmac43455-sdio.raspberrypi%2C4-model-b.txt
}

firstboot_service(){
echo
echo Creating firstboot.
tee /usr/local/sbin/firstboot <<EOF
#!/bin/bash
### Functions
grow_mmcblk(){
bash growpart /dev/mmcblk0 2 > /dev/null 2>&1
sleep 1s
resize2fs /dev/mmcblk0p2 > /dev/null 2>&1
}

grow_mmcblk1(){
bash growpart /dev/mmcblk1 2 > /dev/null 2>&1
sleep 1s
resize2fs /dev/mmcblk1p2 > /dev/null 2>&1
}

grow_sda(){
bash growpart /dev/sda 2 > /dev/null 2>&1
sleep 1s
resize2fs /dev/sda2 > /dev/null 2>&1
}

chk_mmcblk(){
fsck.fat -trawl /dev/mmcblk0p1 > /dev/null 2>&1
}

chk_mmcblk1(){
fsck.fat -trawl /dev/mmcblk1p1 > /dev/null 2>&1
}

chk_sda(){
fsck.fat -trawl /dev/sda1 > /dev/null 2>&1
}

### Grow Partition
echo
echo -e "\e[0;31mExpanding root filesystem\e[0m ..."
if touch -c /dev/mmcblk0 2>/dev/null; then grow_mmcblk;
        else echo "Checking for USB boot ..." &>/dev/null;
fi

if touch -c /dev/mmcblk1 2>/dev/null; then grow_mmcblk1;
        else echo "" &>/dev/null;
fi

if touch -c /dev/sda 2>/dev/null; then grow_sda;
        else echo "" &>/dev/null;
fi

### Renew SSH keys
sleep 1s
echo -e "\e[0;31mCreating new ssh keys\e[0m ..."
/bin/rm -v /etc/ssh/ssh_host_* > /dev/null 2>&1
dpkg-reconfigure openssh-server
service ssh restart

### Fix boot partition
echo -e "\e[0;31mRunning fsck on boot partition\e[0m ..."
umount /boot
sleep 1s
if touch -c /dev/mmcblk0 2>/dev/null; then chk_mmcblk;
        else echo "Checking for USB boot ..." &>/dev/null;
fi

if touch -c /dev/mmcblk1 2>/dev/null; then chk_mmcblk1;
        else echo "" &>/dev/null;
fi

if touch -c /dev/sda 2>/dev/null; then chk_sda;
        else echo "" &>/dev/null;
fi
sleep 1s
mount /boot

### Clean up
rm -f /var/cache/debconf/*
rm -f /usr/local/sbin/firstboot
update-rc.d firstboot remove
rm /etc/init.d/firstboot
EOF
}

led_service(){
echo
echo Creating actled switch.
tee /usr/local/sbin/actled <<EOF
#!/bin/bash
# activity led switch
rpi_switch (){
sh -c 'echo 0 > /sys/devices/platform/leds/leds/led0/brightness'
}

ml_switch (){
sh -c 'echo 0 > /sys/devices/platform/leds/leds/ACT/brightness'
}

if ls /sys/devices/platform/leds/leds/led0/brightness > /dev/null 2>&1;
	then rpi_switch;
fi
if ls /sys/devices/platform/leds/leds/ACT/brightness > /dev/null 2>&1;
	then ml_switch;
fi

EOF

echo
echo Creating pwrled switch.
tee /usr/local/sbin/pwrled <<EOF
#!/bin/bash
# power led switch
rpi_switch (){
sh -c 'echo 0 > /sys/devices/platform/leds/leds/led1/brightness'
}

ml_switch (){
sh -c 'echo 0 > /sys/devices/platform/leds/leds/PWR/brightness'
}

if ls /sys/devices/platform/leds/leds/led1/brightness > /dev/null 2>&1;
	then rpi_switch;
fi
if ls /sys/devices/platform/leds/leds/PWR/brightness > /dev/null 2>&1;
	then ml_switch;
fi

EOF
}

bcm2711_network(){
echo
echo Adding network configs and rules.
sleep 1s
rm -f /etc/network/interfaces
ln -sr /etc/network/if-up.d/00check-network-cable /etc/network/if-pre-up.d/00check-network-cable
sed -i 's/#CONFIGURE_INTERFACES=yes/CONFIGURE_INTERFACES=yes/g' /etc/default/networking
sed -i 's/#WAIT_ONLINE_METHOD=ifup/WAIT_ONLINE_METHOD=ifup/g' /etc/default/networking
sed -i 's/#WAIT_ONLINE_TIMEOUT=300/WAIT_ONLINE_TIMEOUT=10/g' /etc/default/networking
mv -f credentials.txt /boot/rename_to_credentials.txt
cp -f soc.txt /etc/opt/
chown root:root /etc/opt/soc.txt

tee /etc/opt/interfaces.manual <<EOF
### Interfaces
source /etc/network/interfaces.d/*

### Loopback network interface
auto lo
iface lo inet loopback

### Ethernet
allow-hotplug eth0
iface eth0 inet dhcp
    #address 10.0.0.10
    #netmask 255.255.255.0
    #gateway 10.0.0.1
    #dns-nameservers 8.8.8.8 8.8.4.4

### Mobile tether
#allow-hotplug usb0
#iface usb0 inet dhcp

### Wifi
allow-hotplug wlan0
iface wlan0 inet dhcp
	wireless-power off
	#address 10.0.0.10
	#netmask 255.255.255.0
	#gateway 10.0.0.1
	#dns-nameservers 8.8.8.8 8.8.4.4
	wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf

EOF

tee /etc/opt/interfaces <<EOF
### Interfaces
source /etc/network/interfaces.d/*

### Loopback network interface
auto lo
iface lo inet loopback

### Ethernet
allow-hotplug eth0
iface eth0 inet dhcp
    #address 10.0.0.10
    #netmask 255.255.255.0
    #gateway 10.0.0.1
    #dns-nameservers 8.8.8.8 8.8.4.4

### Mobile tether
#allow-hotplug usb0
#iface usb0 inet dhcp

### Wifi
allow-hotplug wlan0
iface wlan0 inet dhcp
	wireless-power off
	wlan_address 10.0.0.10
	wlan_netmask 255.255.255.0
	wlan_gateway 10.0.0.1
	wlan_dns-nameservers 8.8.8.8 8.8.4.4
	wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf

EOF

tee /etc/opt/wpa_supplicant.manual <<EOF
ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
update_config=1
country=US

network={
	ssid="mywifissid"
	scan_ssid=1
	key_mgmt=WPA-PSK
	psk="wifipasskey"
}
EOF

tee /etc/opt/wpa_supplicant.conf <<EOF
ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
update_config=1
country=

network={
	name=
	scan_ssid=1
	key_mgmt=WPA-PSK
	password=
}
EOF
echo Done.
}

bcm2710_network(){
echo
echo Adding network configs and rules.
sleep 1s
rm -f /etc/network/interfaces
ln -sr /etc/network/if-up.d/00check-network-cable /etc/network/if-pre-up.d/00check-network-cable
sed -i 's/#CONFIGURE_INTERFACES=yes/CONFIGURE_INTERFACES=yes/g' /etc/default/networking
sed -i 's/#WAIT_ONLINE_METHOD=ifup/WAIT_ONLINE_METHOD=ifup/g' /etc/default/networking
sed -i 's/#WAIT_ONLINE_TIMEOUT=300/WAIT_ONLINE_TIMEOUT=10/g' /etc/default/networking
mv -f credentials.txt /boot/rename_to_credentials.txt
cp -f soc.txt /etc/opt/
chown root:root /etc/opt/soc.txt

tee /etc/udev/rules.d/80-net-setup-link.rules <<EOF
# raspberry pi 3b eth interface

SUBSYSTEM!="net", GOTO="net_setup_link_end"

IMPORT{builtin}="path_id"

ACTION!="add", GOTO="net_setup_link_end"

IMPORT{builtin}="net_setup_link"

NAME=="", ENV{ID_NET_NAME}!="", NAME="eth0"

LABEL="net_setup_link_end"
EOF

tee /etc/opt/interfaces.manual <<EOF
### Interfaces
source /etc/network/interfaces.d/*

### Loopback network interface
auto lo
iface lo inet loopback

### Ethernet
allow-hotplug eth0
iface eth0 inet dhcp
    #address 10.0.0.10
    #netmask 255.255.255.0
    #gateway 10.0.0.1
    #dns-nameservers 8.8.8.8 8.8.4.4

### Mobile tether
#allow-hotplug usb0
#iface usb0 inet dhcp

### Wifi
allow-hotplug wlan0
iface wlan0 inet dhcp
	wireless-power off
	#address 10.0.0.10
	#netmask 255.255.255.0
	#gateway 10.0.0.1
	#dns-nameservers 8.8.8.8 8.8.4.4
	wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf
EOF

tee /etc/opt/interfaces <<EOF
### Interfaces
source /etc/network/interfaces.d/*

### Loopback network interface
auto lo
iface lo inet loopback

### Ethernet
allow-hotplug eth0
iface eth0 inet dhcp
    #address 10.0.0.10
    #netmask 255.255.255.0
    #gateway 10.0.0.1
    #dns-nameservers 8.8.8.8 8.8.4.4

### Mobile tether
#allow-hotplug usb0
#iface usb0 inet dhcp

### Wifi
allow-hotplug wlan0
iface wlan0 inet dhcp
	wireless-power off
	wlan_address 10.0.0.10
	wlan_netmask 255.255.255.0
	wlan_gateway 10.0.0.1
	wlan_dns-nameservers 8.8.8.8 8.8.4.4
	wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf
EOF

tee /etc/opt/wpa_supplicant.manual <<EOF
ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
update_config=1
country=US

network={
	ssid="mywifissid"
	scan_ssid=1
	key_mgmt=WPA-PSK
	psk="wifipasskey"
}
EOF

tee /etc/opt/wpa_supplicant.conf <<EOF
ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
update_config=1
country=

network={
	name=
	scan_ssid=1
	key_mgmt=WPA-PSK
	password=
}
EOF
echo Done.
}

bcm2708_network(){
echo
echo Adding network configs and rules.
sleep 1s
rm -f /etc/network/interfaces
ln -sr /etc/network/if-up.d/00check-network-cable /etc/network/if-pre-up.d/00check-network-cable
sed -i 's/#CONFIGURE_INTERFACES=yes/CONFIGURE_INTERFACES=yes/g' /etc/default/networking
sed -i 's/#WAIT_ONLINE_METHOD=ifup/WAIT_ONLINE_METHOD=ifup/g' /etc/default/networking
sed -i 's/#WAIT_ONLINE_TIMEOUT=300/WAIT_ONLINE_TIMEOUT=10/g' /etc/default/networking
mv -f credentials.txt /boot/rename_to_credentials.txt
cp -f soc.txt /etc/opt/
chown root:root /etc/opt/soc.txt

tee /etc/opt/interfaces.manual <<EOF
### Interfaces
source /etc/network/interfaces.d/*

### Loopback network interface
auto lo
iface lo inet loopback

### Wifi
allow-hotplug wlan0
iface wlan0 inet dhcp
	wireless-power off
	#address 10.0.0.10
	#netmask 255.255.255.0
	#gateway 10.0.0.1
	#dns-nameservers 8.8.8.8 8.8.4.4
	wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf

EOF

tee /etc/opt/interfaces <<EOF
### Interfaces
source /etc/network/interfaces.d/*

### Loopback network interface
auto lo
iface lo inet loopback

### Wifi
allow-hotplug wlan0
iface wlan0 inet dhcp
	wireless-power off
	wlan_address 10.0.0.10
	wlan_netmask 255.255.255.0
	wlan_gateway 10.0.0.1
	wlan_dns-nameservers 8.8.8.8 8.8.4.4
	wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf

EOF

tee /etc/opt/wpa_supplicant.manual <<EOF
ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
update_config=1
country=US

network={
	ssid="mywifissid"
	scan_ssid=1
	key_mgmt=WPA-PSK
	psk="wifipasskey"
}
EOF

tee /etc/opt/wpa_supplicant.conf <<EOF
ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
update_config=1
country=

network={
	name=
	scan_ssid=1
	key_mgmt=WPA-PSK
	password=
}
EOF
echo Done.
}

bcm2710_cypress(){
echo
echo Adding brcm firmware from cypress.
sleep 1s
mkdir cypress
cd cypress
### 2018 brcm firmware
#wget -cq --show-progress https://community.cypress.com/servlet/JiveServlet/download/15932-1-39799/cypress-fmac-v4.14.52-2018_0928.zip
#unzip -qq cypress-fmac-v4.14.52-2018_0928.zip
#tar -xf cypress-firmware-v4.14.52-2018_0928.tar.gz
#rm -f firmware/*pcie*
### 2019 brcm firmware
wget -cq --show-progress https://community.cypress.com/servlet/JiveServlet/download/19000-1-51721/cypress-fmac-v4.14.77-2020_0115.zip
unzip -qq cypress-fmac-v4.14.77-2020_0115.zip
tar -xf cypress-firmware-v4.14.77-2020_0115.tar.gz
cp -f firmware/* /lib/firmware/brcm/
cd ~
rm -fdr cypress
echo Done.
}

bcm2708_cypress(){
echo
echo Adding brcm firmware from cypress.
sleep 1s
mkdir cypress
cd cypress
wget -cq --show-progress https://community.cypress.com/servlet/JiveServlet/download/19000-1-51721/cypress-fmac-v4.14.77-2020_0115.zip
unzip -qq cypress-fmac-v4.14.77-2020_0115.zip
tar -xf cypress-firmware-v4.14.77-2020_0115.tar.gz
rm -f firmware/*pcie*
cp -f firmware/* /lib/firmware/brcm/
cd ~
rm -fdr cypress
echo Done.
}

ca_certificates(){
echo
echo Updating ca certificates.
sleep 1s
mkdir -p certificates
cd certificates
wget -cq --show-progress https://github.com/pyavitz/binary/releases/download/060420/ca-certificates_20200601.deb10u1_all.deb
wget -cq --show-progress https://github.com/pyavitz/binary/releases/download/060420/ca-certificates-udeb_20200601.deb10u1_all.udeb
dpkg -i *.deb *.udeb
cd ~
rm -fdr certificates
echo Done.
}

bluez_firmware_stable(){
echo
echo Building bluez firmware package.
sleep 1s
mkdir -p bluez-firmware
cd bluez-firmware
wget -cq --show-progress https://archive.raspberrypi.org/debian/pool/main/b/bluez-firmware/bluez-firmware_1.2.orig.tar.gz
tar xf bluez-firmware_1.2.orig.tar.gz
cd bluez-firmware-1.2
wget -cq --show-progress https://archive.raspberrypi.org/debian/pool/main/b/bluez-firmware/bluez-firmware_1.2-4+rpt3.debian.tar.xz
tar xf bluez-firmware_1.2-4+rpt3.debian.tar.xz
rm -f bluez-firmware_1.2-4+rpt3.debian.tar.xz
dpkg-buildpackage -us -uc
cd ..
dpkg -i bluez-firmware_*.deb
cd ~
rm -fdR bluez-firmware
echo Done.
}

bluez_firmware_unstable(){
echo
echo Installing bluez firmware package.
sleep 1s
apt install -y bluez-firmware
mkdir -p /lib/firmware/brcm
mkdir -p /lib/firmware/st
mkdir -p bluez-firmware
cd bluez-firmware
wget -cq --show-progress https://github.com/RPi-Distro/bluez-firmware/raw/master/broadcom/BCM2033-2.13-FW.bin
wget -cq --show-progress https://github.com/RPi-Distro/bluez-firmware/raw/master/broadcom/BCM2033-2.14-FW.bin
wget -cq --show-progress https://github.com/RPi-Distro/bluez-firmware/raw/master/broadcom/BCM2033-2.15-FW.bin
wget -cq --show-progress https://github.com/RPi-Distro/bluez-firmware/raw/master/broadcom/BCM2033-2.16-FW.bin
wget -cq --show-progress https://github.com/RPi-Distro/bluez-firmware/raw/master/broadcom/BCM2033-FW.bin
wget -cq --show-progress https://github.com/RPi-Distro/bluez-firmware/raw/master/broadcom/BCM2033-MD.hex
wget -cq --show-progress https://github.com/RPi-Distro/bluez-firmware/raw/master/broadcom/BCM43430A1.hcd
wget -cq --show-progress https://github.com/RPi-Distro/bluez-firmware/raw/master/broadcom/BCM4345C0.hcd
wget -cq --show-progress https://github.com/RPi-Distro/bluez-firmware/raw/master/broadcom/BCM4345C5.hcd
cd ..
cp -f bluez-firmware/* /lib/firmware/brcm/
rm -fdr bluez-firmware/*
cd bluez-firmware
wget -cq --show-progress https://github.com/RPi-Distro/bluez-firmware/raw/master/st/STLC2500_R4_00_03.ptc
wget -cq --show-progress https://github.com/RPi-Distro/bluez-firmware/raw/master/st/STLC2500_R4_00_06.ssf
wget -cq --show-progress https://github.com/RPi-Distro/bluez-firmware/raw/master/st/STLC2500_R4_02_02_WLAN.ssf
wget -cq --show-progress https://github.com/RPi-Distro/bluez-firmware/raw/master/st/STLC2500_R4_02_04.ptc
cd ..
cp -f bluez-firmware/* /lib/firmware/st/
cd ~
rm -fdR bluez-firmware
echo Done.
}

bluez_firmware_choose(){
case `grep -Fx 'DISTRO_VERSION="testing"' "/root/userdata.txt" >/dev/null; echo $?` in
  0)
	bluez_firmware_unstable
    ;;
  1)
	bluez_firmware_stable
    ;;
esac
}

bluez_stable(){
BLUEZ_VERSION="5.55"
echo
echo Upgrading bluetooth.
sleep 1s
wget -cq --show-progress https://github.com/pyavitz/binary/releases/download/060420/bluez-${BLUEZ_VERSION}-debian-arm64.tar.xz
tar xf bluez-${BLUEZ_VERSION}-debian-arm64.tar.xz
rm -f bluez-${BLUEZ_VERSION}-debian-arm64.tar.xz
cd bluez-${BLUEZ_VERSION}-debian-arm64
rm -f *dbgsym_${BLUEZ_VERSION}*
rm -f *cups_${BLUEZ_VERSION}*
rm -f *source_${BLUEZ_VERSION}*
dpkg -i *.deb
cd ..
rm -fdR bluez-${BLUEZ_VERSION}-debian-arm64
apt-mark hold bluez
echo Done.
}

bluez_unstable(){
BLUEZ_UNSTABLE_VERSION="5.55"
echo
echo Upgrading bluetooth.
sleep 1s
wget -cq --show-progress https://github.com/pyavitz/binary/releases/download/060420/bluez-${BLUEZ_UNSTABLE_VERSION}-debian-unstable-arm64.tar.xz
tar xf bluez-${BLUEZ_UNSTABLE_VERSION}-debian-unstable-arm64.tar.xz
rm -f bluez-${BLUEZ_UNSTABLE_VERSION}-debian-unstable-arm64.tar.xz
cd bluez-${BLUEZ_UNSTABLE_VERSION}-debian-unstable-arm64
rm -f *dbgsym_${BLUEZ_UNSTABLE_VERSION}*
rm -f *cups_${BLUEZ_UNSTABLE_VERSION}*
rm -f *source_${BLUEZ_UNSTABLE_VERSION}*
dpkg -i *.deb
cd ..
rm -fdR bluez-${BLUEZ_UNSTABLE_VERSION}-debian-unstable-arm64
apt-mark hold bluez
echo Done.
}

bluez_choose(){
case `grep -Fx 'DISTRO_VERSION="testing"' "/root/userdata.txt" >/dev/null; echo $?` in
  0)
	bluez_unstable
    ;;
  1)
	bluez_stable
    ;;
esac
}

bcm2711_eeprom(){
echo
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
echo Checking for updates.
apt update
echo
echo Installing rpi-eeprom.
sleep 1s
apt install help2man rsync pciutils -y
###
mkdir -p ~/eeprom
mv -f rpi-eeprom-update.patch /root/eeprom/
mv -f rpi-eeprom-control.patch /root/eeprom/
cd ~/eeprom
wget -cq --show-progress https://archive.raspberrypi.org/debian/pool/main/r/rpi-eeprom/rpi-eeprom_${EEPROM_VERSION}-1.debian.tar.xz
wget -cq --show-progress https://archive.raspberrypi.org/debian/pool/main/r/rpi-eeprom/rpi-eeprom_${EEPROM_VERSION}.orig.tar.gz
tar xf rpi-eeprom_${EEPROM_VERSION}.orig.tar.gz
tar xf rpi-eeprom_${EEPROM_VERSION}-1.debian.tar.xz
rm -f rpi-eeprom_${EEPROM_VERSION}-1.debian.tar.xz
mkdir -p debian/patches
mv rpi-eeprom-update.patch debian/patches/rpi-eeprom-update.patch 
echo rpi-eeprom-update.patch >> debian/patches/series
mv -f debian rpi-eeprom-${EEPROM_VERSION}/
mv rpi-eeprom-control.patch rpi-eeprom-${EEPROM_VERSION}/
cd rpi-eeprom-${EEPROM_VERSION}
patch -p1 < rpi-eeprom-control.patch
rm -f rpi-eeprom-control.patch
dpkg-buildpackage -us -uc
cd ..
dpkg -i *.deb
cd ..
rm -fdr eeprom
echo Done.
}

bcm_modules(){
echo
echo Updating etc modules.
rm -f /etc/modules
tee /etc/modules <<EOF
# /etc/modules: kernel modules to load at boot time.
#
# This file contains the names of kernel modules that should be loaded
# at boot time, one per line. Lines beginning with "#" are ignored.
#bcm2835-v4l2
#i2c-dev

EOF
chown root:root /etc/modules
echo Done.
}

bcm2710_modules(){
echo
echo Updating etc modules.
rm -f /etc/modules
tee /etc/modules <<EOF
# /etc/modules: kernel modules to load at boot time.
#
# This file contains the names of kernel modules that should be loaded
# at boot time, one per line. Lines beginning with "#" are ignored.
#bcm2835-v4l2
#i2c-dev
snd_bcm2835

EOF
chown root:root /etc/modules
echo Done.
}

armv8_userland(){
echo
echo Adding raspi userland.
rm -f /etc/profile
mv -f profile /etc/profile
mv rpi-vc.conf /etc/ld.so.conf.d/rpi-vc.conf
chown root:root /etc/profile
chown root:root /etc/ld.so.conf.d/rpi-vc.conf
sleep 1s
mkdir -p /opt
git clone https://github.com/raspberrypi/userland.git
mv -f userland-remove-hi-pi.patch /root/userland/
cd userland
patch -p1 < userland-remove-hi-pi.patch
rm -f userland-remove-hi-pi.patch
./buildme --aarch64
cd ~
rm -f -d -R userland
ldconfig
echo Done.
}

arm_userland(){
echo
echo Adding raspi userland.
rm -f /etc/profile
mv -f profile /etc/profile
mv rpi-vc.conf /etc/ld.so.conf.d/rpi-vc.conf
chown root:root /etc/profile
chown root:root /etc/ld.so.conf.d/rpi-vc.conf
sleep 1s
mkdir -p /opt
git clone https://github.com/raspberrypi/userland.git
mv -f userland-remove-hi-pi.patch /root/userland/
cd userland
patch -p1 < userland-remove-hi-pi.patch
rm -f userland-remove-hi-pi.patch
./buildme
cd ~
rm -f -d -R userland
ldconfig
echo Done.
}

htop_stable(){
echo
echo Installing htop with cpufreq and thermal support.
sleep 1s
git clone https://github.com/leeadama/htop.git
cd htop
./autogen.sh
./configure --prefix=/usr
make -j4
make install
cd ~
rm -fdr htop
echo Done.
}

htop_unstable(){
echo
echo Installing htop with cpufreq and thermal support.
sleep 1s
git clone https://github.com/leeadama/htop.git
cd htop
./autogen.sh
./configure --prefix=/usr
make -j4 CC=gcc-9
make install
cd ~
rm -fdr htop
echo Done.
}
