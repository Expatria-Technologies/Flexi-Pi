# STAGE 1
focal_sources(){
rm -f p2/etc/apt/sources.list
tee p2/etc/apt/sources.list <<EOF
deb http://ports.ubuntu.com/ubuntu-ports/ focal main restricted
deb http://ports.ubuntu.com/ubuntu-ports/ focal-updates main restricted
deb http://ports.ubuntu.com/ubuntu-ports/ focal universe
deb http://ports.ubuntu.com/ubuntu-ports/ focal-updates universe
deb http://ports.ubuntu.com/ubuntu-ports/ focal multiverse
deb http://ports.ubuntu.com/ubuntu-ports/ focal-updates multiverse
deb http://ports.ubuntu.com/ubuntu-ports/ focal-backports main restricted universe multiverse
deb http://ports.ubuntu.com/ubuntu-ports/ focal-security main restricted
deb http://ports.ubuntu.com/ubuntu-ports/ focal-security universe
deb http://ports.ubuntu.com/ubuntu-ports/ focal-security multiverse

## Uncomment the following two lines to add software from Canonical's
## 'partner' repository.
## This software is not part of Ubuntu, but is offered by Canonical and the
## respective vendors as a service to Ubuntu users.
# deb http://archive.canonical.com/ubuntu focal partner
# deb-src http://archive.canonical.com/ubuntu focal partner
EOF
}

groovy_sources(){
rm -f p2/etc/apt/sources.list
tee p2/etc/apt/sources.list <<EOF
deb http://ports.ubuntu.com/ubuntu-ports/ groovy main restricted
deb http://ports.ubuntu.com/ubuntu-ports/ groovy-updates main restricted
deb http://ports.ubuntu.com/ubuntu-ports/ groovy universe
deb http://ports.ubuntu.com/ubuntu-ports/ groovy-updates universe
deb http://ports.ubuntu.com/ubuntu-ports/ groovy multiverse
deb http://ports.ubuntu.com/ubuntu-ports/ groovy-updates multiverse
deb http://ports.ubuntu.com/ubuntu-ports/ groovy-backports main restricted universe multiverse
deb http://ports.ubuntu.com/ubuntu-ports/ groovy-security main restricted
deb http://ports.ubuntu.com/ubuntu-ports/ groovy-security universe
deb http://ports.ubuntu.com/ubuntu-ports/ groovy-security multiverse

## Uncomment the following two lines to add software from Canonical's
## 'partner' repository.
## This software is not part of Ubuntu, but is offered by Canonical and the
## respective vendors as a service to Ubuntu users.
# deb http://archive.canonical.com/ubuntu groovy partner
# deb-src http://archive.canonical.com/ubuntu groovy partner
EOF
}

hirsute_sources(){
rm -f p2/etc/apt/sources.list
tee p2/etc/apt/sources.list <<EOF
deb http://ports.ubuntu.com/ubuntu-ports/ hirsute main restricted
deb http://ports.ubuntu.com/ubuntu-ports/ hirsute-updates main restricted
deb http://ports.ubuntu.com/ubuntu-ports/ hirsute universe
deb http://ports.ubuntu.com/ubuntu-ports/ hirsute-updates universe
deb http://ports.ubuntu.com/ubuntu-ports/ hirsute multiverse
deb http://ports.ubuntu.com/ubuntu-ports/ hirsute-updates multiverse
deb http://ports.ubuntu.com/ubuntu-ports/ hirsute-backports main restricted universe multiverse
deb http://ports.ubuntu.com/ubuntu-ports/ hirsute-security main restricted
deb http://ports.ubuntu.com/ubuntu-ports/ hirsute-security universe
deb http://ports.ubuntu.com/ubuntu-ports/ hirsute-security multiverse

## Uncomment the following two lines to add software from Canonical's
## 'partner' repository.
## This software is not part of Ubuntu, but is offered by Canonical and the
## respective vendors as a service to Ubuntu users.
# deb http://archive.canonical.com/ubuntu hirsute partner
# deb-src http://archive.canonical.com/ubuntu hirsute partner
EOF
}

impish_sources(){
rm -f p2/etc/apt/sources.list
tee p2/etc/apt/sources.list <<EOF
deb http://ports.ubuntu.com/ubuntu-ports/ impish main restricted
deb http://ports.ubuntu.com/ubuntu-ports/ impish-updates main restricted
deb http://ports.ubuntu.com/ubuntu-ports/ impish universe
deb http://ports.ubuntu.com/ubuntu-ports/ impish-updates universe
deb http://ports.ubuntu.com/ubuntu-ports/ impish multiverse
deb http://ports.ubuntu.com/ubuntu-ports/ impish-updates multiverse
deb http://ports.ubuntu.com/ubuntu-ports/ impish-backports main restricted universe multiverse
deb http://ports.ubuntu.com/ubuntu-ports/ impish-security main restricted
deb http://ports.ubuntu.com/ubuntu-ports/ impish-security universe
deb http://ports.ubuntu.com/ubuntu-ports/ impish-security multiverse

## Uncomment the following two lines to add software from Canonical's
## 'partner' repository.
## This software is not part of Ubuntu, but is offered by Canonical and the
## respective vendors as a service to Ubuntu users.
# deb http://archive.canonical.com/ubuntu impish partner
# deb-src http://archive.canonical.com/ubuntu impish partner
EOF
}

distro_release(){
if [[ `grep -w 'DISTRO_VERSION="focal"' "userdata.txt"` ]]; then
	focal_sources;
fi
if [[ `grep -w 'DISTRO_VERSION="groovy"' "userdata.txt"` ]]; then
	groovy_sources;
fi
if [[ `grep -w 'DISTRO_VERSION="hirsute"' "userdata.txt"` ]]; then
	hirsute_sources;
fi
if [[ `grep -w 'DISTRO_VERSION="impish"' "userdata.txt"` ]]; then
	impish_sources;
fi
}

# STAGE 2
apt_preferences(){
echo
echo Blacking listing packages.
tee /etc/apt/preferences <<EOF
Package: rpi-eeprom linux-firmware linux-firmware-raspi2 pi-bluetooth raspberrypi-sys-mods
Pin: release o=Ubuntu
Pin-Priority: 1
EOF
echo Done.
}

# USER CONFIG
bcm2709_user(){
echo -n 'bcm2709' > /etc/hostname
sed -i '1 a 127.0.1.1	bcm2709' /etc/hosts
adduser ${user} --gecos ${user^} --disabled-password
}

bcm2710_user(){
echo -n 'bcm2710' > /etc/hostname
sed -i '1 a 127.0.1.1	bcm2710' /etc/hosts
adduser ${user} --gecos ${user^} --disabled-password
}

bcm2711_user(){
echo -n 'bcm2711' > /etc/hostname
sed -i '1 a 127.0.1.1	bcm2711' /etc/hosts
adduser ${user} --gecos ${user^} --disabled-password
}

user_config(){
if [[ `grep -w "bcm2711" "/root/soc.txt"` ]]; then
	bcm2711_user;
fi
if [[ `grep -w "bcm2710" "/root/soc.txt"` ]]; then
	bcm2710_user;
fi
if [[ `grep -w "bcm2709" "/root/soc.txt"` ]]; then
	bcm2709_user;
fi

echo "${user}:${passwd}" | chpasswd
adduser ${user} sudo
adduser ${user} audio
adduser ${user} dialout
adduser ${user} video
adduser ${user} disk
adduser ${user} plugdev
adduser ${user} netdev
adduser ${user} bluetooth
adduser ${user} input
adduser ${user} tty
if [[ `grep -w "spi" "/etc/group"` ]]; then
	adduser ${user} spi;
else
	groupadd spi;
	adduser ${user} spi;
fi
if [[ `grep -w "i2c" "/etc/group"` ]]; then
	adduser ${user} i2c;
else
	groupadd i2c;
	adduser ${user} i2c;
fi
if [[ `grep -w "gpio" "/etc/group"` ]]; then
	adduser ${user} gpio;
else
	groupadd gpio;
	adduser ${user} gpio;
fi

echo
echo Adding mc skins.
sleep 1s
mkdir -p /usr/share/mc/skins
mv -f darkgreen.ini /usr/share/mc/skins/darkgreen.ini
mv -f darkred.ini /usr/share/mc/skins/darkred.ini
echo Done.
echo
echo Adding mc ini and nanorc
sleep 1s
mkdir -p /root/.config/mc
mv -f root-ini /root/.config/mc/ini
mv -f nanorc-root /root/.nanorc
mkdir -p /home/${user}/.config/mc
mv -f user-ini /home/${user}/.config/mc/ini
mv -f nanorc-user /home/${user}/.nanorc
chown -R root:root /root
chown -R ${user}:${user} /home/${user}
echo Done.

echo
echo Creating sudoers file.
sleep 1s
rm -f /etc/sudoers.d/010_pi-nopasswd
tee /etc/sudoers.d/010_${user}-nopasswd <<EOF
${user} ALL=(ALL) NOPASSWD: ALL
EOF
echo Done.

rm -f username.txt
rm -f whogoesthere
chown -R ${user}:${user} /home/${user}
}

# ADMIN CONFIG
bcm2709_admin(){
echo -n 'bcm2709' > /etc/hostname
sed -i '1 a 127.0.1.1	bcm2709' /etc/hosts
}

bcm2710_admin(){
echo -n 'bcm2710' > /etc/hostname
sed -i '1 a 127.0.1.1	bcm2710' /etc/hosts
}

bcm2711_admin(){
echo -n 'bcm2711' > /etc/hostname
sed -i '1 a 127.0.1.1	bcm2711' /etc/hosts
}

admin_config(){
if [[ `grep -w "bcm2711" "/root/soc.txt"` ]]; then
	bcm2711_admin;
fi
if [[ `grep -w "bcm2710" "/root/soc.txt"` ]]; then
	bcm2710_admin;
fi
if [[ `grep -w "bcm2709" "/root/soc.txt"` ]]; then
	bcm2709_admin;
fi

if [[ `grep -w "spi" "/etc/group"` ]]; then
	:;
else
	groupadd spi;
fi
if [[ `grep -w "i2c" "/etc/group"` ]]; then
	:;
else
	groupadd i2c;
fi
if [[ `grep -w "gpio" "/etc/group"` ]]; then
	:;
else
	groupadd gpio;
fi

echo
echo Adding mc skins.
sleep 1s
mkdir -p /usr/share/mc/skins
mv -f darkgreen.ini /usr/share/mc/skins/darkgreen.ini
mv -f darkred.ini /usr/share/mc/skins/darkred.ini
echo Done.
echo
echo Adding mc ini and nanorc
sleep 1s
mkdir -p /root/.config/mc
mv -f root-ini /root/.config/mc/ini
mv -f nanorc-root /root/.nanorc
mv -f user-ini /etc/opt/user-ini
mv -f nanorc-user /etc/opt/nanorc-user
chown -R root:root /root
echo Done.

mv -f username.txt /boot/
mv -f whogoesthere /usr/local/bin/
chmod +x /usr/local/bin/whogoesthere
chown -R root:root /usr/local/bin/whogoesthere
}

network_manager(){
echo
echo Adding network configs and rules.
sleep 1s
rm -f /etc/network/interfaces
mv -f interfaces /etc/network/interfaces
chown root:root /etc/network/interfaces
mv -f wpa_supplicant.conf /etc/wpa_supplicant/wpa_supplicant.conf
chown root:root /etc/wpa_supplicant/wpa_supplicant.conf
if [ -e /usr/lib/NetworkManager/conf.d/10-globally-managed-devices.conf ]; then
	rm -f /usr/lib/NetworkManager/conf.d/10-globally-managed-devices.conf
fi
if [ -e /etc/NetworkManager/conf.d/default-wifi-powersave-on.conf ]; then
	sed -i 's/wifi.powersave = 3/wifi.powersave = 2/g' /etc/NetworkManager/conf.d/default-wifi-powersave-on.conf;
fi
mv -f credentials.txt /boot/rename_to_credentials.txt
cp -f soc.txt /etc/opt/
chown root:root /etc/opt/soc.txt
echo Done.
}

pi_bluetooth(){
echo
echo Building pi bluetooth package.
sleep 1s
git clone https://github.com/pyavitz/pi-bluetooth.git -b ubuntu
cd pi-bluetooth
chmod +x debian/rules
dpkg-buildpackage -us -uc
cd ~
dpkg -i pi-bluetooth_*.deb
rm -fdR pi-bluetooth*
echo Done.
}

led_switches(){
echo
echo Creating power led switch.
sleep 1s
tee /etc/systemd/system/pwrledoff.service <<EOF
[Unit]
Description=Turn off power led
ConditionPathExists=/usr/local/sbin/pwrled
[Service]
Type=forking
ExecStart=/usr/local/sbin/pwrled &>/dev/null
[Install]
WantedBy=multi-user.target
EOF

echo
echo Creating activity led switch. 
sleep 1s
tee /etc/systemd/system/actledoff.service <<EOF
[Unit]
Description=Turn off activity led
ConditionPathExists=/usr/local/sbin/actled
[Service]
Type=forking
ExecStart=/usr/local/sbin/actled &>/dev/null
[Install]
WantedBy=multi-user.target
EOF
}

enable_services(){
systemctl enable rc-local
systemctl enable ifplugd
systemctl enable haveged
systemctl enable zramswap
systemctl enable bluetooth
systemctl enable firstboot
systemctl enable credentials
systemctl enable governor
#systemctl enable serial-getty@ttyUSB0.service
if [ -e /etc/systemd/system/multi-user.target.wants/ondemand.service ]; then
	systemctl disable ondemand;
fi
}
