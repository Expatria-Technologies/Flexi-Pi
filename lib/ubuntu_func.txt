### STAGE 1
partitions(){
truncate -s ${UBUNTUIMGSIZE} "${IMAGE_FOLDER}${IMAGE_FILE_NAME}"
fdisk "${IMAGE_FOLDER}${IMAGE_FILE_NAME}" <<EOF
o
n
p
1
2048
524287
a
c
t
b
n
p
2
524288

p
w

EOF
IMAGE_LOOP_DEV="$(losetup --show -f ${IMAGE_FOLDER}${IMAGE_FILE_NAME})"
IMAGE_LOOP_DEV_BOOT="${IMAGE_LOOP_DEV}p1"
IMAGE_LOOP_DEV_ROOTFS="${IMAGE_LOOP_DEV}p2"
partprobe "${IMAGE_LOOP_DEV}"
mkfs.vfat -n BOOT "${IMAGE_LOOP_DEV_BOOT}"
mkfs.ext4 -L ROOTFS "${IMAGE_LOOP_DEV_ROOTFS}"
mkdir -p p1 p2
mount "${IMAGE_LOOP_DEV_BOOT}" p1
mount "${IMAGE_LOOP_DEV_ROOTFS}" p2
sync
umount p2
mount -o defaults,noatime "${IMAGE_LOOP_DEV_ROOTFS}" p2
}

aarch64_extract () {
tar -xf ubuntu-base-${DISTRO_VERSION}-base-arm64.tar.gz -C p2/
}

aarch64_rootfs(){
if ls ubuntu-base-${DISTRO_VERSION}-base-arm64.tar.gz > /dev/null 2>&1
	then echo -n "Extracting rootfs " && aarch64_extract && echo_bdone;
	else echo -e "${YLW}Missing rootfs tarball${FIN}!" && exit;
fi
echo
}

rpi-firmware(){
aria2c -c --download-result=hide --console-log-level=error \
--disable-ipv6=true --summary-interval=0 --show-files=false \
https://github.com/RPi-Distro/firmware-nonfree/archive/master.tar.gz
mv -f firmware-nonfree-master.tar.gz firmware/
}

### STAGE 2
# USER CONFIG
bcm2710_user () {
echo -n 'bcm2710' > /etc/hostname
sed -i '1 a 127.0.1.1	bcm2710' /etc/hosts
adduser ${user} --gecos "bcm2710" --disabled-password
}

bcm2711_user () {
echo -n 'bcm2711' > /etc/hostname
sed -i '1 a 127.0.1.1	bcm2711' /etc/hosts
adduser ${user} --gecos "bcm2711" --disabled-password
}

user_config () {
case `grep -Fx "bcm2711" "/root/soc.txt" >/dev/null; echo $?` in
  0)
	bcm2711_user
    ;;
esac
case `grep -Fx "bcm2710" "/root/soc.txt" >/dev/null; echo $?` in
  0)
	bcm2710_user
    ;;
esac

echo "${user}:${passwd}" | chpasswd
adduser ${user} sudo
adduser ${user} audio
adduser ${user} dialout
adduser ${user} video
adduser ${user} disk
groupadd spi
groupadd i2c
groupadd gpio
adduser ${user} spi
adduser ${user} i2c
adduser ${user} gpio
adduser ${user} plugdev
adduser ${user} netdev
adduser ${user} bluetooth
adduser ${user} input
adduser ${user} tty

echo
echo Adding mc skins.
sleep 1s
mkdir -p /usr/share/mc/skins
mv -f darkgreen.ini /usr/share/mc/skins/darkgreen.ini
mv -f darkred.ini /usr/share/mc/skins/darkred.ini
echo Done.
echo
echo Adding mc ini and nanorc
sleep 1s
mkdir -p /root/.config/mc
mv -f root-ini /root/.config/mc/ini
mv -f nanorc-root /root/.nanorc
mkdir -p /home/${user}/.config/mc
mv -f user-ini /home/${user}/.config/mc/ini
mv -f nanorc-user /home/${user}/.nanorc
chown -R root:root /root
chown -R ${user}:${user} /home/${user}
echo Done.

echo
echo Creating sudoers file.
sleep 1s
rm -f /etc/sudoers.d/010_pi-nopasswd
tee /etc/sudoers.d/010_${user}-nopasswd <<EOF
${user} ALL=(ALL) NOPASSWD: ALL
EOF
echo Done.

rm -f username.txt
rm -f whogoesthere
chown -R ${user}:${user} /home/${user}
}

# ADMIN CONFIG
bcm2710_admin () {
echo -n 'bcm2710' > /etc/hostname
sed -i '1 a 127.0.1.1	bcm2710' /etc/hosts
}

bcm2711_admin () {
echo -n 'bcm2711' > /etc/hostname
sed -i '1 a 127.0.1.1	bcm2711' /etc/hosts
}

admin_config () {
case `grep -Fx "bcm2711" "/root/soc.txt" >/dev/null; echo $?` in
  0)
	bcm2711_admin
    ;;
esac
case `grep -Fx "bcm2710" "/root/soc.txt" >/dev/null; echo $?` in
  0)
	bcm2710_admin
    ;;
esac

groupadd spi
groupadd i2c
groupadd gpio

echo
echo Adding mc skins.
sleep 1s
mkdir -p /usr/share/mc/skins
mv -f darkgreen.ini /usr/share/mc/skins/darkgreen.ini
mv -f darkred.ini /usr/share/mc/skins/darkred.ini
echo Done.
echo
echo Adding mc ini and nanorc
sleep 1s
mkdir -p /root/.config/mc
mv -f root-ini /root/.config/mc/ini
mv -f nanorc-root /root/.nanorc
mv -f user-ini /etc/opt/user-ini
mv -f nanorc-user /etc/opt/nanorc-user
chown -R root:root /root
echo Done.

mv -f username.txt /boot/
mv -f whogoesthere /usr/local/bin/
chmod +x /usr/local/bin/whogoesthere
chown -R root:root /usr/local/bin/whogoesthere
}

led_service () {
echo
echo Creating actled switch.
tee /usr/local/sbin/actled <<EOF
#!/bin/bash
# activity led switch
rpi_switch (){
sh -c 'echo 0 > /sys/devices/platform/leds/leds/led0/brightness'
}

ml_switch (){
sh -c 'echo 0 > /sys/devices/platform/leds/leds/ACT/brightness'
}

if ls /sys/devices/platform/leds/leds/led0/brightness > /dev/null 2>&1;
	then rpi_switch;
fi
if ls /sys/devices/platform/leds/leds/ACT/brightness > /dev/null 2>&1;
	then ml_switch;
fi

EOF

echo
echo Creating pwrled switch.
tee /usr/local/sbin/pwrled <<EOF
#!/bin/bash
# power led switch
rpi_switch (){
sh -c 'echo 0 > /sys/devices/platform/leds/leds/led1/brightness'
}

ml_switch (){
sh -c 'echo 0 > /sys/devices/platform/leds/leds/PWR/brightness'
}

if ls /sys/devices/platform/leds/leds/led1/brightness > /dev/null 2>&1;
	then rpi_switch;
fi
if ls /sys/devices/platform/leds/leds/PWR/brightness > /dev/null 2>&1;
	then ml_switch;
fi

EOF
}

user_eeprom () {
echo
echo Adding user eeprom config.
tee /home/${user}/.eeprom <<EOF
# EEPROM CONFIG
## https://archive.raspberrypi.org/debian/pool/main/r/rpi-eeprom/
EEPROM_VERSION="${EEPROM_VERSION}"
EOF
chown ${user}:${user} /home/${user}/.eeprom
}

admin_eeprom () {
echo
echo Adding user eeprom config.
tee /etc/opt/eeprom <<EOF
# EEPROM CONFIG
## https://archive.raspberrypi.org/debian/pool/main/r/rpi-eeprom/
EEPROM_VERSION="${EEPROM_VERSION}"
EOF
chown root:root /etc/opt/eeprom
}

eeprom_choose () {
case `grep -Fx "admin=1" "/root/userdata.txt" >/dev/null; echo $?` in
  0)
	admin_eeprom
    ;;
  1)
	user_eeprom
    ;;
esac
}

bcm_sdio_zero-w () {
wget -cq --show-progress https://raw.githubusercontent.com/openwrt/cypress-nvram/master/brcmfmac43430-sdio.raspberrypi%2Cmodel-zero-w.txt
}

bcm_sdio_3-b-plus(){
wget -cq --show-progress https://raw.githubusercontent.com/openwrt/cypress-nvram/master/brcmfmac43455-sdio.raspberrypi%2C3-model-b-plus.txt
wget -cq --show-progress https://raw.githubusercontent.com/RPi-Distro/firmware-nonfree/master/brcm/brcmfmac43430-sdio.raspberrypi-rpi.txt
}

bcm_sdio_4-b () {
wget -cq --show-progress https://raw.githubusercontent.com/openwrt/cypress-nvram/master/brcmfmac43455-sdio.raspberrypi%2C4-model-b.txt
}

bcm2711_network () {
echo
echo Adding network configs and rules.
sleep 1s
rm -f /etc/network/interfaces
mv -f interfaces /etc/network/interfaces
chown root:root /etc/network/interfaces
mv -f wpa_supplicant.conf /etc/wpa_supplicant/wpa_supplicant.conf
chown root:root /etc/wpa_supplicant/wpa_supplicant.conf
mkdir -p /etc/udev/rules.d
mv -f 80-net-setup-link.rules /etc/udev/rules.d/80-net-setup-link.rules
chown root:root /etc/udev/rules.d/80-net-setup-link.rules
rm -f /usr/lib/NetworkManager/conf.d/10-globally-managed-devices.conf
mv -f credentials.txt /boot/rename_to_credentials.txt
cp -f soc.txt /etc/opt/
chown root:root /etc/opt/soc.txt
echo Done.
}

bcm2710_network () {
echo
echo Adding network configs and rules.
sleep 1s
rm -f /etc/network/interfaces
mv -f interfaces /etc/network/interfaces
chown root:root /etc/network/interfaces
mv -f wpa_supplicant.conf /etc/wpa_supplicant/wpa_supplicant.conf
chown root:root /etc/wpa_supplicant/wpa_supplicant.conf
mkdir -p /etc/udev/rules.d
mv -f 80-net-setup-link.rules /etc/udev/rules.d/80-net-setup-link.rules
sed -i 's/NAME="wlan0"/NAME="eth0"/g' /etc/udev/rules.d/80-net-setup-link.rules
chown root:root /etc/udev/rules.d/80-net-setup-link.rules
rm -f /usr/lib/NetworkManager/conf.d/10-globally-managed-devices.conf
mv -f credentials.txt /boot/rename_to_credentials.txt
cp -f soc.txt /etc/opt/
chown root:root /etc/opt/soc.txt
echo Done.
}

bcm2710_cypress(){
echo
echo Adding brcm firmware from cypress.
sleep 1s
mkdir cypress
cd cypress
### 2018 brcm firmware
#wget -cq --show-progress https://community.cypress.com/servlet/JiveServlet/download/15932-1-39799/cypress-fmac-v4.14.52-2018_0928.zip
#unzip -qq cypress-fmac-v4.14.52-2018_0928.zip
#tar -xf cypress-firmware-v4.14.52-2018_0928.tar.gz
#rm -f firmware/*pcie*
### 2019 brcm firmware
wget -cq --show-progress https://community.cypress.com/servlet/JiveServlet/download/19000-1-51721/cypress-fmac-v4.14.77-2020_0115.zip
unzip -qq cypress-fmac-v4.14.77-2020_0115.zip
tar -xf cypress-firmware-v4.14.77-2020_0115.tar.gz
cp -f firmware/* /lib/firmware/brcm/
cd ~
rm -fdr cypress
echo Done.
}

bluez_upgrade () {
BLUEZ_VERSION="5.55"
echo
echo Upgrading bluetooth.
sleep 1s
wget -cq --show-progress https://github.com/pyavitz/binary/releases/download/060420/bluez-${BLUEZ_VERSION}-ubuntu-arm64.tar.xz
tar xf bluez-${BLUEZ_VERSION}-ubuntu-arm64.tar.xz
rm -f bluez-${BLUEZ_VERSION}-ubuntu-arm64.tar.xz
cd bluez-${BLUEZ_VERSION}-ubuntu-arm64
rm -f *dbg_${BLUEZ_VERSION}*
rm -f *cups_${BLUEZ_VERSION}*
rm -f *source_${BLUEZ_VERSION}*
dpkg -i *.deb
cd ..
rm -fdR bluez-${BLUEZ_VERSION}-ubuntu-arm64
apt-mark hold bluez
echo Done.
}

bcm2711_eeprom () {
echo
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
echo Checking for updates.
apt update
echo
echo Installing rpi-eeprom.
sleep 1s
apt install help2man rsync pciutils -y
###
mkdir -p ~/eeprom
mv -f rpi-eeprom-update.patch ~/eeprom/
mv -f rpi-eeprom-control.patch ~/eeprom/
cd ~/eeprom
wget -cq --show-progress https://archive.raspberrypi.org/debian/pool/main/r/rpi-eeprom/rpi-eeprom_${EEPROM_VERSION}-1.debian.tar.xz
wget -cq --show-progress https://archive.raspberrypi.org/debian/pool/main/r/rpi-eeprom/rpi-eeprom_${EEPROM_VERSION}.orig.tar.gz
tar xf rpi-eeprom_${EEPROM_VERSION}.orig.tar.gz
tar xf rpi-eeprom_${EEPROM_VERSION}-1.debian.tar.xz
rm -f rpi-eeprom_${EEPROM_VERSION}-1.debian.tar.xz
mkdir -p debian/patches
mv rpi-eeprom-update.patch debian/patches/rpi-eeprom-update.patch
echo rpi-eeprom-update.patch >> debian/patches/series
mv -f debian rpi-eeprom-${EEPROM_VERSION}/
mv rpi-eeprom-control.patch rpi-eeprom-${EEPROM_VERSION}/
cd rpi-eeprom-${EEPROM_VERSION}
patch -p1 < rpi-eeprom-control.patch
rm -f rpi-eeprom-control.patch
dpkg-buildpackage -us -uc
cd ..
dpkg -i *.deb
cd ..
rm -fdr eeprom
echo Done.
}

bcm2711_modules () {
echo
echo Updating etc modules.
rm -f /etc/modules
tee /etc/modules <<EOF
# /etc/modules: kernel modules to load at boot time.
#
# This file contains the names of kernel modules that should be loaded
# at boot time, one per line. Lines beginning with "#" are ignored.
#bcm2835-v4l2
#i2c-dev

EOF
chown root:root /etc/modules
echo Done.
}

bcm2710_modules () {
echo
echo Updating etc modules.
rm -f /etc/modules
tee /etc/modules <<EOF
# /etc/modules: kernel modules to load at boot time.
#
# This file contains the names of kernel modules that should be loaded
# at boot time, one per line. Lines beginning with "#" are ignored.
#bcm2835-v4l2
#i2c-dev
snd_bcm2835

EOF
chown root:root /etc/modules
echo Done.
}

armv8_userland () {
echo
echo Adding raspi userland.
rm -f /etc/profile
mv -f profile /etc/profile
mv rpi-vc.conf /etc/ld.so.conf.d/rpi-vc.conf
chown root:root /etc/profile
chown root:root /etc/ld.so.conf.d/rpi-vc.conf
sleep 1s
mkdir -p /opt
git clone https://github.com/raspberrypi/userland.git
mv -f userland-remove-hi-pi.patch /root/userland/
cd userland
patch -p1 < userland-remove-hi-pi.patch
rm -f userland-remove-hi-pi.patch
./buildme --aarch64
cd ~
rm -f -d -R userland
ldconfig
echo Done.
}

led_switches () {
echo
echo Creating power led switch.
sleep 1s
tee /etc/systemd/system/pwrledoff.service <<EOF
[Unit]
Description=Turn off power led
ConditionPathExists=/usr/local/sbin/pwrled
[Service]
Type=forking
ExecStart=/usr/local/sbin/pwrled &>/dev/null
[Install]
WantedBy=multi-user.target
EOF

echo
echo Creating activity led switch. 
sleep 1s
tee /etc/systemd/system/actledoff.service <<EOF
[Unit]
Description=Turn off activity led
ConditionPathExists=/usr/local/sbin/actled
[Service]
Type=forking
ExecStart=/usr/local/sbin/actled &>/dev/null
[Install]
WantedBy=multi-user.target
EOF
}
