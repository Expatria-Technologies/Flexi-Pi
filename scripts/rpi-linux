#!/bin/bash
source lib/function/echoes
source lib/source
validation
source board.txt
source userdata.txt
source packaging/pkgvars
source lib/function/rpi-linux
source lib/function/wireless
source lib/function/modconfig

# prep
validation
if [ $VERBOSE -eq 1 ]; then
	set -x;
fi
HOST_ARCH=`uname -m`
if [[ "$HOST_ARCH" == "aarch64" ]] && [[ "$ARCH" == "arm64" ]]; then
	CROSSCOMPILE="0"
fi
if [[ "$HOST_ARCH" == "aarch64" ]] && [[ "$ARCH" == "arm" ]]; then
	CROSSCOMPILE="1"
fi
if [[ "$HOST_ARCH" == "x86_64"  ]] && [[ "$ARCH" == "arm" || "$ARCH" == "arm64" ]]; then
	CROSSCOMPILE="1"
fi
compiler
source_dir

if [ -e ${KERNEL}-${VERSION} ]; then
	echo "";
	echo -en "${WHT}${KERNEL}-${VERSION}${FIN}";
	echo -en " ${PNK}[${FIN}${YLW}removing${FIN}${PNK}]${FIN} ";
	rm -fdr ${KERNEL}-${VERSION};
	echo -en "${PNK}[${FIN}${GRN}done${FIN}${PNK}]${FIN}";
fi

# Download kernel
if [[ `wget -S --spider https://raw.githubusercontent.com/raspberrypi/linux/rpi-${VERSION}/Makefile 2>&1 | grep 'HTTP/1.1 200 OK'` ]]; then
	download
else
	echo ""
	echo -e "${WHT}It appears the branch you selected is not available${FIN}?"
	exit 0
fi

# Extract
extract

# Setup
setup
firmware

# Packaging
packaging

# Defconfig
if [ $CUSTOM_DEFCONFIG -eq 1 ]; then
	cconfig
else
	fconfig
fi

# Menuconfig
if [ $MENUCONFIG -eq 1 ]; then
	menuconfig
fi

# Builddeb
if [ $CROSSCOMPILE -eq 1 ]; then
	ccompile
else
	ncompile
fi
echo ""
# finish
cd ..
rm -f {*linux-image-dbg*.deb,linux-libc-dev*.deb,*.buildinfo,*.changes}
if [[ `ls *linux*.deb` ]] > /dev/null 2>&1; then
	if [[ `ls ../${OUTPUT}/*linux*.deb` ]] > /dev/null 2>&1; then
		mkdir -p ../${OUTPUT}/tmp
		mv -f ../${OUTPUT}/{*linux-image*.deb,*linux-headers*.deb} ../${OUTPUT}/tmp
	fi
	mkdir -p ../${OUTPUT}
	mv -f *.deb ../${OUTPUT}/
	echo_done
	exit 0
else
	echo ""
	echo -e "${KERNEL} ${VERSION} [FAILED]"
	read -p "Press enter to continue."
	exit 1
fi

exit 0
