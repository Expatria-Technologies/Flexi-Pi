#!/bin/bash

DOWNLOAD="aria2c -c --download-result=hide --console-log-level=error --disable-ipv6=true --summary-interval=0 --show-files=false"
HELP="\e[1;33m"
GRN="\e[1;32m"
PNK="\e[1;35m"
WHT="\e[1;37m"
FIN="\e[0m"
source lib/source
UD=userdata.txt

userdata(){
echo ""
echo "Please create a userdata.txt file"
while [ true ] ; do
read -t 10 -n 1
if [ $? = 0 ] ; then
exit ;
else
echo "run make config"
fi
done
}

if [ -f "$UD" ]; then
    :;
else 
    userdata
fi

validation

os_release(){
if [[ `grep -w 'DISTRO_VERSION="bullseye"' "userdata.txt"` ]]; then URL="https://github.com/pyavitz/rpi-linux/releases/download/gcc-10/"; fi
if [[ `grep -w 'DISTRO_VERSION="bookworm"' "userdata.txt"` ]]; then URL="https://github.com/pyavitz/rpi-linux/releases/download/gcc-10/"; fi
if [[ `grep -w 'DISTRO_VERSION="chimaera"' "userdata.txt"` ]]; then URL="https://github.com/pyavitz/rpi-linux/releases/download/gcc-10/"; fi
if [[ `grep -w 'DISTRO_VERSION="daedalus"' "userdata.txt"` ]]; then URL="https://github.com/pyavitz/rpi-linux/releases/download/gcc-10/"; fi
if [[ `grep -w 'DISTRO_VERSION="focal"' "userdata.txt"` ]]; then URL="https://github.com/pyavitz/rpi-linux/releases/download/gcc-10/"; fi
if [[ `grep -w 'DISTRO_VERSION="impish"' "userdata.txt"` ]]; then URL="https://github.com/pyavitz/rpi-linux/releases/download/gcc-10/"; fi
if [[ `grep -w 'DISTRO_VERSION="jammy"' "userdata.txt"` ]]; then URL="https://github.com/pyavitz/rpi-linux/releases/download/gcc-10/"; fi
if [[ `grep -w 'DISTRO_VERSION="testing"' "userdata.txt"` ]]; then URL="https://github.com/pyavitz/rpi-linux/releases/download/gcc-10/"; fi
if [[ `grep -w 'DISTRO_VERSION="unstable"' "userdata.txt"` ]]; then URL="https://github.com/pyavitz/rpi-linux/releases/download/gcc-10/"; fi
if [[ `grep -w 'DISTRO_VERSION="sid"' "userdata.txt"` ]]; then URL="https://github.com/pyavitz/rpi-linux/releases/download/gcc-10/"; fi
}

echo_bdone(){
echo -e "${PNK}[${FIN}${GRN}done${FIN}${PNK}]${FIN}"
}

rpi(){
if grep -w 'DISTRO="ubuntu"' "userdata.txt" > /dev/null 2>&1; then echo && echo -e "${WHT}Ubuntu is not supported.${FIN}" && exit 0; fi
os_release
echo
echo -e "${WHT}Downloading${FIN} ..."
if [[ `wget -S --spider ${URL}rpi-$release.tar.xz 2>&1 | grep 'HTTP/1.1 200 OK'` ]]; then
	${DOWNLOAD} ${URL}rpi-$release.tar.xz
	echo_bdone;
else
	echo -e "${WHT}Something went wrong? Please report which Distribution and Release you are trying to download.${FIN}"
	exit;
fi
echo
echo -e "${WHT}Extracting archive${FIN} ..."
echo -e -n "${WHT}"
pv rpi-$release.tar.xz | tar -xJ rpi-$release
echo -e -n "${FIN}"
rm -f rpi-$release.tar.xz
if [ -e output/bcm2708 ]; then
	sudo rm -fdr output/bcm2708;
fi
mkdir -p output
mv rpi-$release output/bcm2708
echo
echo -e "${WHT}Results${FIN}:"
ls output/bcm2708/*.deb
echo
}

rpi2(){
os_release
echo
echo -e "${WHT}Downloading${FIN} ..."
if [[ `wget -S --spider ${URL}rpi2-$release.tar.xz 2>&1 | grep 'HTTP/1.1 200 OK'` ]]; then
	${DOWNLOAD} ${URL}rpi2-$release.tar.xz
	echo_bdone;
else
	echo -e "${WHT}Something went wrong? Please report which Distribution and Release you are trying to download.${FIN}"
	exit;
fi
echo
echo -e "${WHT}Extracting archive${FIN} ..."
echo -e -n "${WHT}"
pv rpi2-$release.tar.xz | tar -xJ rpi2-$release
echo -e -n "${FIN}"
rm -f rpi2-$release.tar.xz
if [ -e output/bcm2709 ]; then
	sudo rm -fdr output/bcm2709;
fi
mkdir -p output
mv rpi2-$release output/bcm2709
echo
echo -e "${WHT}Results${FIN}:"
ls output/bcm2709/*.deb
echo
}

rpi3(){
os_release
echo
echo -e "${WHT}Downloading${FIN} ..."
if [[ `wget -S --spider ${URL}rpi3-$release.tar.xz 2>&1 | grep 'HTTP/1.1 200 OK'` ]]; then
	${DOWNLOAD} ${URL}rpi3-$release.tar.xz
	echo_bdone;
else
	echo -e "${WHT}Something went wrong? Please report which Distribution and Release you are trying to download.${FIN}"
	exit;
fi
echo
echo -e "${WHT}Extracting archive${FIN} ..."
echo -e -n "${WHT}"
pv rpi3-$release.tar.xz | tar -xJ rpi3-$release
echo -e -n "${FIN}"
rm -f rpi3-$release.tar.xz
if [ -e output/bcm2710 ]; then
	sudo rm -fdr output/bcm2710;
fi
mkdir -p output
mv rpi3-$release output/bcm2710
echo
echo -e "${WHT}Results${FIN}:"
ls output/bcm2710/*.deb
echo
}

rpi4(){
os_release
echo
echo -e "${WHT}Downloading${FIN} ..."
if [[ `wget -S --spider ${URL}rpi4-$release.tar.xz 2>&1 | grep 'HTTP/1.1 200 OK'` ]]; then
	${DOWNLOAD} ${URL}rpi4-$release.tar.xz
	echo_bdone;
else
	echo -e "${WHT}Something went wrong? Please report which Distribution and Release you are trying to download.${FIN}"
	exit;
fi
echo
echo -e "${WHT}Extracting archive${FIN} ..."
echo -e -n "${WHT}"
pv rpi4-$release.tar.xz | tar -xJ rpi4-$release
echo -e -n "${FIN}"
rm -f rpi4-$release.tar.xz
if [ -e output/bcm2711 ]; then
	sudo rm -fdr output/bcm2711;
fi
mkdir -p output
mv rpi4-$release output/bcm2711
echo
echo -e "${WHT}Results${FIN}:"
ls output/bcm2711/*.deb
echo
}

rpi4v7(){
os_release
echo
echo -e "${WHT}Downloading${FIN} ..."
if [[ `wget -S --spider ${URL}rpi4v7-$release.tar.xz 2>&1 | grep 'HTTP/1.1 200 OK'` ]]; then
	${DOWNLOAD} ${URL}rpi4v7-$release.tar.xz
	echo_bdone;
else
	echo -e "${WHT}Something went wrong? Please report which Distribution and Release you are trying to download.${FIN}"
	exit;
fi
echo
echo -e "${WHT}Extracting archive${FIN} ..."
echo -e -n "${WHT}"
pv rpi4v7-$release.tar.xz | tar -xJ rpi4v7-$release
echo -e -n "${FIN}"
rm -f rpi4v7-$release.tar.xz
if [ -e output/bcm2711v7 ]; then
	sudo rm -fdr output/bcm2711v7;
fi
mkdir -p output
mv rpi4v7-$release output/bcm2711v7
echo
echo -e "${WHT}Results${FIN}:"
ls output/bcm2711v7/*.deb
echo
}

options(){
echo ""
echo -e "${WHT}Options${FIN}: 5.15.y or stable"
echo -e "${WHT}"
echo -ne "Select release${FIN}: "
read release
}

if [ $# -eq 0 ]
then
        echo -e "\e[0;31mMissing options!${FIN}"
        echo "(run $0 -h for help)"
        echo ""
        exit 0
fi

ECHO="false"

while getopts "12345h" OPTION; do
        case $OPTION in

                1)
                        ECHO="rpi"
                        ;;
                2)
                        ECHO="rpi2"
                        ;;
                3)
                        ECHO="rpi3"
                        ;;
                4)
                        ECHO="rpi4"
                        ;;
                5)
                        ECHO="rpi4v7"
                        ;;
                h)                       
                        echo -e "${WHT}Helper, downloads a binary Linux package${FIN}."
                        echo ""
                        echo -e "   make 2708        Raspberry Pi 0/1/W/B/+ (ARMEL)"
                        echo -e "   make 2709        Raspberry Pi 2/3/A/B/+ (ARMHF)"
                        echo -e "   make 2710        Raspberry Pi 3/A/B/+   (ARM64)"
                        echo -e "   make 2711        Raspberry Pi 4B/400    (ARM64)"
                        echo -e "   make 2711v7      Raspberry Pi 4B/400    (ARMHF)"
                        echo ""
                        exit 0
                        ;;

        esac
done
if [ $ECHO = "rpi" ]; then
	options;
	rpi;
fi
if [ $ECHO = "rpi2" ]; then
	options;
	rpi2;
fi
if [ $ECHO = "rpi3" ]; then
	options;
	rpi3;
fi
if [ $ECHO = "rpi4" ]; then
	options;
	rpi4;
fi
if [ $ECHO = "rpi4v7" ]; then
	options;
	rpi4v7;
fi
