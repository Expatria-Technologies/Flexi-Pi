#!/bin/bash
#AARCH64 ROOTFS
source userdata.txt > /dev/null 2>&1;
source lib/source
source lib/function/rootfs

devuan_rootfs (){
DEVUAN_RELEASE=devuan-${DISTRO_VERSION}-rootfs-aarch64.tar.xz
if ls $DEVUAN_RELEASE &>/dev/null; then exit; 
	else : ;
fi
wget -cq --show-progress https://github.com/pyavitz/rootfs-tarballs/releases/download/rootfs/devuan-${DISTRO_VERSION}-rootfs-aarch64.tar.xz
}

ubuntu_rootfs (){
UBUNTU_RELEASE=ubuntu-base-${DISTRO_VERSION}-base-arm64.tar.gz
if ls $UBUNTU_RELEASE &>/dev/null; then exit; 
	else : ;
fi
wget -cq --show-progress http://cdimage.ubuntu.com/ubuntu-base/releases/${DISTRO_VERSION}/release/ubuntu-base-${DISTRO_VERSION}-base-arm64.tar.gz
}

if `grep -Fx "devuan=1" "userdata.txt" >/dev/null;`
	then devuan_rootfs && exit;
fi
if `grep -Fx "ubuntu=1" "userdata.txt" >/dev/null;`
	then ubuntu_rootfs && exit;
fi
if `grep -Fx "verbose=1" "userdata.txt" >/dev/null;`
	then set -eux -o pipefail;
	else set -eu -o pipefail;
fi
RAM=0
PROXY=""
IMAGE_FOLDER="img/"
IMAGE_VERSION="rootfs-aarch64"
FILE=debian-${DISTRO_VERSION}-${IMAGE_VERSION}.tar.xz
if ls $FILE &>/dev/null; then exit; 
	else echo && echo "Starting debootstrap ...";
fi
IMAGE_FILE_SUFFIX="$(date +%F)"
IMAGE_FILE_NAME="debian-${DISTRO_VERSION}-${IMAGE_VERSION}.img"
if [ $RAM -ne 0 ]; then
	IMAGE_FOLDER="ram/"
fi
mkdir -p "$IMAGE_FOLDER"
if [ $RAM -ne 0 ]; then
	mount -t tmpfs -o size=1G tmpfs $IMAGE_FOLDER
fi
if `grep -Fx "verbose=1" "userdata.txt" >/dev/null;`
	then partition;
	else partition > /dev/null 2>&1;
fi
mkdir -p p1/etc/apt/apt.conf.d p1/etc/dpkg/dpkg.cfg.d
echo "force-unsafe-io" > "p1/etc/dpkg/dpkg.cfg.d/dpkg-unsafe-io"
mkdir -p p1/usr/bin
cp $(which "qemu-aarch64-static") p1/usr/bin
if [ -n "$PROXY" ] ; then
    http_proxy="$PROXY" debootstrap --arch arm64 --foreign ${DISTRO_VERSION} p1
    http_proxy="$PROXY" chroot p1 /debootstrap/debootstrap --second-stage
else
    debootstrap --arch arm64 --foreign ${DISTRO_VERSION} p1
    chroot p1 /debootstrap/debootstrap --second-stage
fi
if [ -n "$PROXY" ] ; then
	tee "p1/etc/apt/apt.conf.d/30proxy" <<EOF
Acquire::http::proxy "http://127.0.0.1:3142";
EOF
fi

rm p1/usr/bin/qemu-aarch64-static

if [ -n "$PROXY" ] ; then
	rm p1/etc/apt/apt.conf.d/30proxy
fi
rm p1/etc/dpkg/dpkg.cfg.d/dpkg-unsafe-io

### Finish
e4defrag -c p1
echo
echo "Archiving root filesystem ..."
cd p1
#tar cfJ ../debian-${DISTRO_VERSION}-${IMAGE_VERSION}.tar.xz *
tar cfJ - * | (pv > ../debian-${DISTRO_VERSION}-${IMAGE_VERSION}.tar.xz)
cd ..

umount p1

losetup -d "${IMAGE_LOOP_DEV}"
mv "${IMAGE_FOLDER}${IMAGE_FILE_NAME}" "${IMAGE_FILE_NAME}"
if [ $RAM -ne 0 ]; then
	umount "${IMAGE_FOLDER}"
fi
rmdir "${IMAGE_FOLDER}"
rmdir p1
rm -f debian-${DISTRO_VERSION}-${IMAGE_VERSION}.img
clear
