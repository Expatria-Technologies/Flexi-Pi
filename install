#!/bin/bash

RED="\e[1;31m"
GRN="\e[1;32m"
PNK="\e[1;35m"
WHT="\e[1;37m"
YLW="\e[1;33m"
FIN="\e[0m"

echo_nok(){
echo -e -n "${PNK}[${FIN}${GRN}OK${FIN}${PNK}]${FIN}"
}

echo_focal(){
echo -e -n "${PNK}[${FIN}${GRN}Ubuntu Focal${FIN}${PNK}]${FIN}"
}

echo_jammy(){
echo -e -n "${PNK}[${FIN}${GRN}Ubuntu Jammy Jellyfish${FIN}${PNK}]${FIN}"
}

echo_bullseye(){
echo -e -n "${PNK}[${FIN}${GRN}Debian Bullseye${FIN}${PNK}]${FIN}"
}

echo_fail(){
echo -n -e "${PNK}[${FIN}${RED}failed${FIN}${PNK}]${FIN}"
}

ierror(){
echo
echo -e "${WHT}Please check your internet connection and try again${FIN}."
}

derror(){
echo
echo -e "${WHT}The OS you are running is not supported${FIN}."
}

internet_check(){
echo -e -n "${WHT}Checking Internet Connection:${FIN} "
if [[ `wget -S --spider https://github.com 2>&1 | grep 'HTTP/1.1 200 OK'` ]]; then
	echo_nok
	echo "";
else
	echo_fail
	echo ""
	ierror
	exit 1;
fi
}

distro_check(){
echo -e -n "${WHT}Checking Host Machine:${FIN} "
sleep 1s
if [[ `grep -w "focal" "/etc/os-release"` ]]; then
	echo_focal
	echo ""
else
	if [[ `grep -w "jammy" "/etc/os-release"` ]]; then
		echo_jammy
		echo "";
	else
		if [[ `grep -w "bullseye" "/etc/os-release"` ]]; then
			echo_bullseye
			echo "";
		else
			echo_fail
			echo ""
			derror
			exit;
		fi
	fi
fi
}

echo ""
internet_check
distro_check
echo ""

if [[ `sudo dmesg | grep -w x86-64` ]]; then
	echo -e "${WHT}Starting install ...${FIN}"
	sleep 2s
	if [ -e /usr/bin/make ]; then
		sudo apt update
		make ccompile;
	else
		sleep 2s
		sudo apt update
		sudo apt install -y make
		make ccompile;
	fi
fi

if [[ `sudo dmesg | grep -w arm64` ]]; then
echo -e -n "${WHT}"
echo -e "Arm64 Detected! Select the dependencies you would like installed."
options=("Cross Compiling" "Native Compiling" "Quit")
select opt in "${options[@]}"
do
	case $opt in
		"Cross Compiling")
		if [ -e /usr/bin/make ]; then
			echo ""
			echo -e "${WHT}Starting install ...${FIN}"
			sleep 2s
			sudo apt update
			make ccompile64;
		else
			echo ""
			echo -e "${WHT}Starting install ...${FIN}"
			sleep 2s
			sudo apt update
			sudo apt install -y make
			make ccompile64;
		fi
			break
			;;
		"Native Compiling")
		if [ -e /usr/bin/make ]; then
			echo ""
			echo -e "${WHT}Starting install ...${FIN}"
			sleep 2s
			sudo apt update
			make ncompile;
		else
			echo ""
			echo -e "${WHT}Starting install ...${FIN}"
			sleep 2s
			sudo apt update
			sudo apt install -y make
			make ncompile;
		fi
			break
			;;
		"Quit")
			break
			;;
		*) echo "invalid option $REPLY";;
	esac
done
echo -e -n "${FIN}"
fi

make dialogrc > /dev/null 2>&1
echo
make
